import{d as o,n as l,M as c}from"./index-Bb2fYWZV.js";import{P as u}from"./papaparse.min-BozOGMXF.js";import{Z as d}from"./zip-loader.module-BRLILkva.js";import{V as p}from"./VuePlotly-YFJEAglX.js";import{V as h}from"./vue-slide-bar.min-CrKNIaDm.js";const m=o({name:"SelectWidget",components:{VueSlideBar:h},props:{state:{type:Object,required:!0},measure:{type:String,required:!0}},data(){return{value:0,stops:[0,1e3],interventions:{remainingFractionWork:"Still going to work",remainingFractionShopping:"Still shopping",remainingFractionLeisure:"Still doing leisure activities",remainingFractionOther:"Still doing other activities",ReopenAfter:"Lift Shutdown After X Days"}}},mounted(){const s=[];for(const e of this.state.measures[this.measure])s.push(e===1e3?"Never":e);this.stops=s.map(e=>e<=1?e*100:e),this.value="Never"},computed:{measureTitle(){return this.interventions[this.measure]}},watch:{value(){let s=this.value;s==="Never"?s=1e3:s!==21&&(s=.01*s),this.$emit("changed",this.measure,s)}}});var f=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"slider-thing"},[t("vue-slide-bar",{staticClass:"my-slider",attrs:{speed:0,data:e.stops},model:{value:e.value,callback:function(n){e.value=n},expression:"value"}}),t("p",[e._v(e._s(e.measureTitle))])],1)},v=[],g=l(m,f,v,!1,null,"909d860a");const y=g.exports,_=o({name:"ChartSelector",components:{MySlider:y,VuePlotly:p},props:{state:{type:Object,required:!0}},data(){return{currentRun:{},data:[],layout:{autosize:!0,legend:{orientation:"h"},font:{family:"Roboto,Arial,Helvetica,sans-serif",size:12,color:"#000"},margin:{l:50,t:10,r:10,b:0},yaxis:{autorange:!0},xaxis:{}},loglayout:{autosize:!0,legend:{orientation:"h"},font:{family:"Roboto,Arial,Helvetica,sans-serif",size:12,color:"#000"},margin:{l:50,t:10,r:10,b:0},yaxis:{type:"log",autorange:!0}},options:{displayModeBar:!1,responsive:!0},currentSituation:{},loadedSeriesData:{},zipLoader:{},labels:{nSusceptible:"Susceptible",nInfectedButNotContagious:"Infected, not contagious",nContagious:"Contagious",nSeriouslySick:"Seriously Sick",nCritical:"Critical",nTotalInfected:"Total Infected",nInfectedCumulative:"Infected Cumulative",nRecovered:"Recovered",nInQuarantine:"In Quarantine"}}},mounted(){this.loadZipData()},methods:{async loadZipData(){this.zipLoader=new d(this.state.publicPath+"v2-data.zip"),await this.zipLoader.load(),console.log("zip loaded!"),this.runChanged()},async runChanged(){if(console.log({run:this.currentRun}),this.loadedSeriesData[this.currentRun.RunId]){this.data=this.loadedSeriesData[this.currentRun.RunId];return}const s=await this.loadCSV(this.currentRun),e=this.generateSeriesFromCSVData(s);this.loadedSeriesData[this.currentRun.RunId]=e,this.data=e},sliderChanged(s,e){this.currentSituation[s]=e,this.showPlotForCurrentSituation()},showPlotForCurrentSituation(){let s="";for(const e of Object.keys(this.state.measures))s+=this.currentSituation[e]+"-";this.currentRun=this.state.runLookup[s],this.currentRun&&this.runChanged()},unpack(s,e){let t=s.map(function(n){return n[e]});return t=t.slice(0,150),t.length<150&&t.push(e==="day"?150:t[t.length-1]),t},async loadCSV(s){if(!s.RunId)return[];const e=s.RunId+".infections.txt";console.log("Extracting",e);let t=this.zipLoader.extractAsText(e);return u.parse(t,{header:!0,dynamicTyping:!0,skipEmptyLines:!0}).data},generateSeriesFromCSVData(s){const e=[],t=this.unpack(s,"day");for(const n of Object.keys(this.labels)){const a=this.labels[n],r=this.unpack(s,n);e.push({x:t,y:r,name:a})}return e}}});var S=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{attrs:{id:"main-section"}},[t("div",{staticClass:"pieces"},[t("div",{staticClass:"sliders"},[t("h5",[e._v("Intervention Options")]),t("p",{staticClass:"subhead"},[e._v("Percent Noncompliance:")]),e._l(Object.keys(e.state.measures),function(n){return t("div",{key:n,staticClass:"myslider"},[t("my-slider",{attrs:{measure:n,state:e.state},on:{changed:e.sliderChanged}})],1)})],2),t("div",{staticClass:"linear-plot"},[t("h5",[e._v("Simulated Population Health Outcomes Over Time")]),t("p",[e._v("Linear scale")]),t("vue-plotly",{staticClass:"plotsize",attrs:{data:e.data,layout:e.layout,options:e.options}})],1),t("div",{staticClass:"log-plot"},[t("h5",[e._v("Simulated Population Health Outcomes Over Time")]),t("p",[e._v("Log scale")]),t("vue-plotly",{staticClass:"plotsize",attrs:{data:e.data,layout:e.loglayout,options:e.options}})],1)])])},C=[],b=l(_,S,C,!1,null,"b5e026f8");const x=b.exports,w=`## v2: Examining adherence rates for stay-at-home orders

The interventions below depict disease spread following various levels of adherence with stay-at-home policies.

- The simulations refer to the **Berlin** region (Berlin city plus some surroundings).
- The simulations begin on Day 0, with 40 infected individuals in the population.
- Intervention measures go into effect on day 30.

The **base doubling time is approx. 2.1 days**. It corresponds to the German growth rate end Feb/begin Mar, with neither policy measures nor cultural adaptations.
`,k=new c,R=o({name:"V2",components:{SectionViewer:x},data(){return{state:{measures:{},runLookup:{},publicPath:"/"},readme:k.render(w,{})}},async mounted(){const s=await this.loadIndexData();await this.generateScenarioMatrix(s)},methods:{async loadIndexData(){console.log("fetching data");const e=await(await fetch(this.state.publicPath+"v2-info.txt")).text(),t=u.parse(e,{header:!0,dynamicTyping:!0});return console.log({parsed:t.data}),t.data},async generateScenarioMatrix(s){console.log("generating lookups");const e={},t={},n=["Config","Output","RunId","RunScript"];for(const a of Object.keys(s[0]))n.indexOf(a)>-1||(e[a]=new Set);for(const a of s){if(!a.RunId)continue;for(const i of Object.keys(e))(a[i]===0||a[i])&&e[i].add(a[i]);let r="";for(const i of Object.keys(e))r+=a[i]+"-";t[r]=a}for(const a of Object.keys(e))e[a]=Array.from(e[a].keys()).sort((r,i)=>r-i);console.log({measures:e,runLookup:t}),this.state.measures=e,this.state.runLookup=t}}});var I=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"zapp"},[t("div",{staticClass:"content"},[t("p",{staticClass:"readme",domProps:{innerHTML:e._s(e.readme)}})]),t("section-viewer",{staticClass:"viewer",attrs:{state:e.state}})],1)},O=[],z=l(R,I,O,!1,null,"670eec9f");const V=z.exports;export{V as default};
//# sourceMappingURL=V2-D2WYTuSd.js.map
