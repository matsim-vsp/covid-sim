{"version":3,"file":"MobilityPageLandkreise-BYSpH0a7.js","sources":["../../src/components/MobilityPlotLandkreise.vue","../../src/views/MobilityPageLandkreise.vue"],"sourcesContent":["<template lang=\"pug\">\nvue-plotly(:data=\"dataLines\" :layout=\"layout\" :options=\"options\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport VuePlotly from '@/components/VuePlotly.vue'\n\nexport default defineComponent({\n  name: 'MobilityPlotLandkreise',\n  components: { VuePlotly },\n  props: {\n    landkreis: { type: String, required: true },\n    landkreisTwo: { type: String, required: true },\n    week: { type: String, required: true },\n    kind: { type: String, required: true },\n    yAxisName: { type: String, required: true },\n    data: { type: Array as PropType<any[]>, required: true },\n    percent: { type: Boolean },\n  },\n\n  data() {\n    return {\n      dataLines: [] as any[],\n      layout: {\n        showlegend: true,\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { t: 5, r: 60, b: 0, l: 60 },\n        xaxis: {\n          fixedrange: window.innerWidth < 700,\n          //range: ['2020-03-02', '2021-04-26'],\n          type: 'date',\n        },\n        yaxis: {\n          fixedrange: window.innerWidth < 700,\n          type: 'linear',\n          autorange: true,\n          title: this.yAxisName,\n        },\n        plot_bgcolor: '#f8f8f8',\n        paper_bgcolor: '#f8f8f8',\n      },\n\n      options: {\n        responsive: true,\n        // displayModeBar: true,\n        displaylogo: false,\n        modeBarButtonsToRemove: [\n          'pan2d',\n          'zoom2d',\n          'select2d',\n          'lasso2d',\n          'zoomIn2d',\n          'zoomOut2d',\n          'autoScale2d',\n          'hoverClosestCartesian',\n          'hoverCompareCartesian',\n          'resetScale2d',\n          'toggleSpikelines',\n          'resetViewMapbox',\n        ],\n        toImageButtonOptions: {\n          format: 'svg', // one of png, svg, jpeg, webp\n          filename: 'custom_image',\n          width: 1200,\n          height: 600,\n          scale: 1.0, // Multiply title/legend/axis/canvas sizes by this factor\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.loadPlots()\n  },\n\n  watch: {\n    kind() {\n      this.layout.yaxis.title = this.yAxisName\n      this.loadPlots()\n    },\n\n    data() {\n      this.layout.yaxis.title = this.yAxisName\n      this.loadPlots()\n    },\n\n    landkreisTwo() {\n      this.loadPlots()\n    },\n\n    landkreis() {\n      this.loadPlots()\n    },\n  },\n\n  methods: {\n    loadPlots() {\n      var mobilityData: any[] = []\n      var tempData\n      var xData: any[] = []\n      var ydata: any[] = []\n      for (const [key, value] of Object.entries(this.data)) {\n        if (key == this.landkreis) {\n          tempData = value\n        }\n      }\n\n      if (this.percent) {\n        if (this.week != 'weeek') {\n          if (tempData !== undefined) {\n            for (const [key, value] of Object.entries(tempData)) {\n              if (key == this.week) {\n                for (const [key2, value2] of Object.entries(value as object)) {\n                  xData.push(key2)\n                  ydata.push(value2['percentageChangeComparedToBeforeCorona'])\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (this.week != 'weeek') {\n          if (tempData !== undefined) {\n            for (const [key, value] of Object.entries(tempData)) {\n              if (key == this.week) {\n                for (const [key2, value2] of Object.entries(value as object)) {\n                  xData.push(key2)\n                  ydata.push(value2[this.kind])\n                }\n              }\n            }\n          }\n        }\n      }\n\n      mobilityData.push({\n        name: this.landkreis,\n        x: xData,\n        y: ydata,\n        fill: 'none',\n        marker: { size: 4 },\n        line: {\n          dash: 'line',\n          width: 2,\n        },\n      })\n\n      var xDataTwo: any[] = []\n      var ydataTwo: any[] = []\n      for (const [key, value] of Object.entries(this.data)) {\n        if (key == this.landkreisTwo) {\n          tempData = value\n        }\n      }\n\n      if (this.percent) {\n        if (tempData !== undefined) {\n          for (const [key, value] of Object.entries(tempData)) {\n            if (key == this.week) {\n              for (const [key2, value2] of Object.entries(value as object)) {\n                xDataTwo.push(key2)\n                ydataTwo.push(value2['percentageChangeComparedToBeforeCorona'])\n              }\n            }\n          }\n        }\n      } else {\n        if (tempData !== undefined) {\n          for (const [key, value] of Object.entries(tempData)) {\n            if (key == this.week) {\n              for (const [key2, value2] of Object.entries(value as object)) {\n                xDataTwo.push(key2)\n                ydataTwo.push(value2[this.kind])\n              }\n            }\n          }\n        }\n      }\n\n      mobilityData.push({\n        name: this.landkreisTwo,\n        x: xDataTwo,\n        y: ydataTwo,\n        fill: 'none',\n        marker: { size: 4 },\n        line: {\n          dash: 'line',\n          width: 2,\n        },\n      })\n\n      this.dataLines = mobilityData\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n","<template lang=\"pug\">\n.mplk\n  .banner\n    h2 VSP / Technische Universit√§t Berlin\n    h3 COVID-19 Analysis Portal\n\n  .page-area\n    colophon.colophon\n\n    .left-area\n      .button-area\n         h3 {{ $t('type') }}\n         .buttons.button-choices\n           button.button(:class=\"{'is-link' : status == 1}\" @click='clickButton(1)') {{ $t('duration') }}\n           button.button(:class=\"{'is-link' : status == 2}\" @click='clickButton(2)') {{ $t('distance') }}\n           button.button(:class=\"{'is-link' : status == 3}\" @click='clickButton(3)') {{ $t('proportion') }}\n           button.button(:class=\"{'is-link' : status == 4}\" @click='clickButton(4)') {{ $t('nightly-activity') }}\n         h3 {{ $t('time') }}\n         .buttons.button-choices\n           button.button(:class=\"{'is-link' : statusTime == 5}\" @click='clickButton(5)') {{ $t('week') }}\n           button.button(:class=\"{'is-link' : statusTime == 6}\" @click='clickButton(6)') {{ $t('weekday') }}\n           button.button(:class=\"{'is-link' : statusTime == 7}\" @click='clickButton(7)') {{ $t('weekend') }}\n         h3 {{ $t('start-end-date') }}\n         .button-row\n          .dateselect.date-choices(v-if=\"statusTime == 5 || statusTime == 7\")\n\n            select.select-menue(v-model='startdate')\n              option(v-for=\"date in allWeekDates\") {{ date }}\n          .dateselect.date-choices(v-if=\"statusTime == 6\")\n\n            select.select-menue(v-model='startdate')\n              option(v-for=\"date in allWeekdayDates\") {{ date }}\n          .dateselect.date-choices(v-if=\"statusTime == 5 || statusTime == 7\")\n\n            select.select-menue(v-model='enddate')\n              option(v-for=\"date in allWeekDates\") {{ date }}\n          .dateselect.date-choices(v-if=\"statusTime == 6\")\n\n            select.select-menue(v-model='enddate')\n              option(v-for=\"date in allWeekdayDates\") {{ date }}\n\n         h3(v-if=\"yaml.info\"): b {{ $t('remarks') }}:\n\n         ul(v-if=\"yaml.info\")\n          li.notes-item(v-for=\"line in yaml.info\" v-html=\"parseMarkdown(line)\")\n\n\n\n\n      .plot-area\n        h2 {{ $t('mobility-trends') }}\n\n        h3.badpage(v-if=\"badPage\") {{ $t('badpage') }}\n\n        .goodpage(v-else)\n          p(v-if=\"yaml.description\" v-html=\"topDescription\")\n\n          .all-plots\n\n            .linear-plot\n\n              h5 {{ $t('germany-map') }}\n                .plotarea.map\n                  mobility-map.plotsize(\n                    :landkreisData=\"allData\", :activity=\"activity\", :startDate=\"startdate\", :endDate=\"enddate\" :time=\"weekInterval\"\n                    :mapping=\"mappingData\" @landkreisClicked=\"handleLandkreisClicked\"\n                  )\n\n              br\n\n              .button-area\n                h3 {{ $t('county') }}\n                .button-row\n                    .dateselect.date-choices\n                      select.select-menue(v-model='selectedLandkreisOne')\n                        option(v-for=\"element in allLandkreise\") {{ element }}\n                    .dateselect.date-choices\n                      select.select-menue(v-model='selectedLandkreisTwo')\n                        option(v-for=\"element in allLandkreise\") {{ element }}\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('week') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('week') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('week') }})\n              h5(v-else-if=\"status == 4\") {{ $t('nightly-activity') }} ({{ $t('week') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"selectedLandkreisOne\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'week'\"\n                    :yAxisName=\"yAxisNAme\" :landkreisTwo=\"selectedLandkreisTwo\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('weekday') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('weekday') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('weekday') }})\n              h5(v-else-if=\"status == 4\") {{ $t('nightly-activity') }} ({{ $t('weekday') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"selectedLandkreisOne\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'weekday'\"\n                    :yAxisName=\"yAxisNAme\" :landkreisTwo=\"selectedLandkreisTwo\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('weekend') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('weekend') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('weekend') }})\n              h5(v-else-if=\"status == 4\") {{ $t('nightly-activity') }} ({{ $t('weekend') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"selectedLandkreisOne\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'weekend'\"\n                    :yAxisName=\"yAxisNAme\" :landkreisTwo=\"selectedLandkreisTwo\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading-percent') }}\n              .plotarea.tall(v-if=\"status == 1\")\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"selectedLandkreisOne\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'week'\" :yAxisName=\"'Percent [%]'\"\n                    :landkreisTwo=\"selectedLandkreisTwo\" :percent=\"true\")\n\n\n\n\n\n          h3(v-if=\"yaml.notes\"): b {{ $t('remarks') }}:\n\n          ul(v-if=\"yaml.notes\")\n            li.notes-item(v-for=\"line in yaml.notes\" v-html=\"parseMarkdown(line)\")\n\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      badpage: 'That page not found, sorry!',\n      'mobility-trends': 'Mobility Dashboard',\n      remarks: 'Remarks',\n      type: 'Select Type:',\n      duration: 'Duration',\n      distance: 'Travel Distances',\n      proportion: 'Proportion of Mobile Persons',\n      'duration-heading': 'Amount of Time Spent Outside the Home',\n      'distance-heading': 'Average distance traveled',\n      'proportion-heading': 'Proportion of mobile persons',\n      'duration-heading-percent':\n        'Percent Change in Mobility Levels Compared to Pre-COVID-19 (Week)',\n      'nightly-activity': 'Nighttime activities (10 p.m. - 5 a.m.)',\n      week: 'Week',\n      weekday: 'Weekday',\n      weekend: 'Weekend',\n      'y-axis-one': 'Zeit pro Tag [h]',\n      'y-axis-two': 'Distanz pro Person [km/h]',\n      'y-axis-percent': 'Prozent [%]',\n      'start-date': 'Start Date',\n      'end-date': 'End Date',\n      'germany-map': 'Difference Map',\n      county: 'County Comparison',\n      'start-end-date': 'Start- and End-Date',\n      time: 'Time period',\n    },\n    de: {\n      badpage: 'Seite wurde nicht gefunden.',\n      'mobility-trends': 'Mobility Dashboard',\n      remarks: 'Bemerkungen',\n      type: 'Art ausw√§hlen:',\n      duration: 'Dauer',\n      distance: 'Distanz',\n      proportion: 'Anteil mobiler Personen',\n      'duration-heading': 'Zeit, die au√üerhalb des Hauses verbracht wurde',\n      'distance-heading': 'Durchschnittlich zur√ºckgelegte Distanz',\n      'proportion-heading': 'Anteil mobiler Personen',\n      'duration-heading-percent':\n        'Prozentuale Ver√§nderung der Dauer au√üh√§usiger Aktivit√§ten im Vergleich zu vor COVID-19 (Woche)',\n      'nightly-activity': 'N√§chtliche Aktivit√§ten (22.00 - 5.00 Uhr)',\n      week: 'Woche',\n      weekday: 'Wochentag',\n      weekend: 'Wochenende',\n      'y-axis-one': 'Time per Day [h]',\n      'y-axis-two': 'Distance per Person [km/h]',\n      'y-axis-percent': 'Percent [%]',\n      'start-date': 'Start-Datum',\n      'end-date': 'End-Datum',\n      'germany-map': 'Differenzkarte',\n      county: 'Landkreis Vergleich',\n      'start-end-date': 'Start- und Enddatum',\n      time: 'Zeitraum',\n    },\n  },\n}\n\nimport MarkdownIt from 'markdown-it'\nimport Papaparse from '@simwrapper/papaparse'\nimport YAML from 'yaml'\n\nimport Colophon from '@/components/Colophon.vue'\nimport MobilityPlot from '@/components/MobilityPlot.vue'\nimport MobilityPlotLandkreise from '@/components/MobilityPlotLandkreise.vue'\nimport MobilityMap from '@/components/MobilityMap.vue'\n\ntype MobilityYaml = {\n  description?: string\n  notes: string[]\n  info: string[]\n}\n\nimport { defineComponent } from 'vue'\n\nconst public_svn =\n  'https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/episim/'\n\nconst markdownParser = new MarkdownIt({\n  html: true,\n  linkify: true,\n  typographer: true,\n})\n\nexport default defineComponent({\n  name: 'MobilityPageLandkreise',\n  i18n,\n  components: { Colophon, MobilityPlot, MobilityMap, MobilityPlotLandkreise },\n  props: {},\n  data() {\n    return {\n      badPage: false,\n      landkreise: public_svn + 'mobilityData/landkreise',\n      mobility: '/LK_mobilityData_',\n      range: '/LK_Range_',\n      timeline: '/LK_nightHoursSum_',\n      weekdays: 'weekdays.csv',\n      weekdaysTimeline: 'weekdays.csv',\n      weekends: 'weekends.csv',\n      weekly: 'weekly.csv',\n      selectedLandkreisOne: 'Berlin',\n      selectedLandkreisTwo: 'Deutschland',\n\n      minWeekMobility: 10000,\n      maxWeekMobility: 0,\n      absolutDiff: 0,\n\n      startdate: '2020-03-08',\n      enddate: '2020-03-08',\n\n      startDateWeek: '',\n      endDateWeek: '',\n      startDateWeekday: '',\n      endDateWeekday: '',\n\n      yaml: { description: '', notes: [], info: [] } as MobilityYaml,\n\n      mobilityWeekdays: [] as any[],\n      mobilityWeekends: [] as any[],\n      mobilityWeekly: [] as any[],\n      rangeWeeends: [] as any[],\n      rangeWeekly: [] as any[],\n      rangeWeekdays: [] as any[],\n\n      timelineyWeekdays: [] as any[],\n      timelineWeekends: [] as any[],\n      timelineWeekly: [] as any[],\n\n      allLandkreise: [] as any[],\n      allWeekDates: [] as any[],\n      allWeekdayDates: [] as any[],\n      mappingData: {} as any,\n      mappingDataReverse: {} as any,\n\n      allData: [] as any[],\n      status: 1,\n      statusTime: 5,\n      weekInterval: 'week',\n      activity: 'outOfHomeDuration',\n      yAxisNAme: 'Time per Day [h]',\n      plotHeading: 'Amount of Time Spent Outside the Home',\n      dataLoadingFail: false,\n\n      queryParameter: {\n        county_one: '',\n        county_two: '',\n        date_one: '',\n        date_two: '',\n      } as any,\n    }\n  },\n\n  async mounted() {\n    await this.loadAllData()\n    await this.buildPageForURL()\n  },\n\n  computed: {\n    topDescription() {\n      if (!this.yaml.description) return ''\n      return markdownParser.render(this.yaml.description)\n    },\n  },\n\n  watch: {\n    $route() {\n      this.buildPageForURL()\n    },\n\n    startdate() {\n      this.queryParameter.date_one = this.startdate\n      console.log((this.queryParameter.date_one = this.startdate))\n      console.log(this.queryParameter)\n      this.clickButton(this.statusTime)\n    },\n\n    enddate() {\n      this.queryParameter.date_two = this.enddate\n      this.clickButton(this.statusTime)\n    },\n\n    selectedLandkreisOne() {\n      this.queryParameter.county_one = this.selectedLandkreisOne\n      this.clickButton(this.statusTime)\n    },\n\n    selectedLandkreisTwo() {\n      this.queryParameter.county_two = this.selectedLandkreisTwo\n      this.clickButton(this.statusTime)\n    },\n  },\n\n  methods: {\n    handleLandkreisClicked(landkreis: number) {\n      this.selectedLandkreisOne = this.mappingDataReverse[landkreis]\n    },\n\n    async loadAllData() {\n      this.mobilityWeekends = await this.loadLandkreisData(\n        this.landkreise + this.mobility + this.weekends\n      )\n\n      this.mobilityWeekly = await this.loadLandkreisData(\n        this.landkreise + this.mobility + this.weekly\n      )\n\n      this.mobilityWeekdays = await this.loadLandkreisData(\n        this.landkreise + this.mobility + this.weekdays\n      )\n\n      this.timelineWeekends = await this.loadLandkreiseTimeline(\n        this.landkreise + this.timeline + this.weekends\n      )\n\n      this.timelineyWeekdays = await this.loadLandkreiseTimeline(\n        this.landkreise + this.timeline + this.weekdaysTimeline\n      )\n\n      this.timelineWeekly = await this.loadLandkreiseTimeline(\n        this.landkreise + this.timeline + this.weekly\n      )\n\n      this.rangeWeeends = await this.loadRangeData(this.landkreise + this.range + this.weekends)\n      this.rangeWeekly = await this.loadRangeData(this.landkreise + this.range + this.weekly)\n      this.rangeWeekdays = await this.loadRangeData(this.landkreise + this.range + this.weekdays)\n\n      this.loadAllLandkreise()\n\n      this.mappingData = await this.mappingGeojsonToCsv(\n        this.landkreise + '/mapping_shape_to_csv.csv'\n      )\n      this.mappingDataReverse = await this.mappingGeojsonToCsvReversed(\n        this.landkreise + '/mapping_shape_to_csv.csv'\n      )\n\n      this.combineData()\n\n      await this.addTimeLine()\n\n      this.updateLandkreisNames()\n\n      if (this.statusTime == 5 || this.statusTime == 7) {\n        this.startdate = this.allWeekDates[0]\n        this.enddate = this.allWeekDates[this.allWeekDates.length - 1]\n      } else if (this.statusTime == 6) {\n        this.startdate = this.allWeekdayDates[0]\n        this.enddate = this.allWeekdayDates[this.allWeekdayDates.length - 1]\n      }\n\n      this.allData.sort()\n      await this.openPage(window.location.href)\n      console.log(window.location.href)\n    },\n\n    async buildUI() {\n      this.openPage(window.location.href)\n    },\n    async loadRangeData(url: string) {\n      try {\n        const rawData = await fetch(url).then(response => response.text())\n        const parsed = Papaparse.parse(rawData, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n        }).data\n\n        const withDates = parsed.map((row: any) => {\n          const d = row.date.toString()\n          row.date = `${d.substring(0, 4)}-${d.substring(4, 6)}-${d.substring(6, 8)}`\n          return row\n        })\n\n        return withDates\n      } catch (e) {\n        this.dataLoadingFail = true\n        console.error(e)\n      }\n      return []\n    },\n\n    async mappingGeojsonToCsvReversed(url: string) {\n      var returnObj = {} as any\n      try {\n        const rawData = await fetch(url).then(response => response.text())\n        const parsed = Papaparse.parse(rawData, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n        }).data\n\n        parsed.map((row: any) => {\n          const csvName = row.csv_name\n          const jsonID = row.id_2\n          returnObj[jsonID] = csvName\n        })\n\n        return returnObj\n      } catch (e) {\n        this.dataLoadingFail = true\n        console.error(e)\n      }\n    },\n\n    async mappingGeojsonToCsv(url: string) {\n      var returnObj = {} as any\n      try {\n        const rawData = await fetch(url).then(response => response.text())\n        const parsed = Papaparse.parse(rawData, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n        }).data\n\n        parsed.map((row: any) => {\n          const csvName = row.csv_name\n          const jsonID = row.id_2\n          returnObj[csvName] = jsonID\n        })\n\n        return returnObj\n      } catch (e) {\n        this.dataLoadingFail = true\n        console.error(e)\n      }\n    },\n\n    updateLandkreisNames() {},\n\n    async addTimeLine() {\n      for (var i = 0; i < this.timelineWeekends.length; i++) {\n        var date = this.timelineWeekends[i].date\n        var area = this.timelineWeekends[i].area\n        var sum = this.timelineWeekends[i]['22-5']\n\n        if (this.allData[area] !== undefined) {\n          if (sum < this.minWeekMobility) {\n            this.minWeekMobility = sum\n          }\n          if (sum > this.maxWeekMobility) {\n            this.maxWeekMobility = sum\n          }\n          if (this.allData[area]['weekend'][date] === undefined) {\n          } else {\n            this.allData[area].weekend[date].endHomeActs = sum\n          }\n        }\n      }\n\n      for (var i = 0; i < this.timelineyWeekdays.length; i++) {\n        var date = this.timelineyWeekdays[i].date\n        var area = this.timelineyWeekdays[i].area\n        var sum = this.timelineyWeekdays[i]['22-5']\n        if (this.allData[area] !== undefined) {\n          if (sum > this.maxWeekMobility) {\n            this.maxWeekMobility = sum\n          }\n          if (sum < this.minWeekMobility) {\n            this.minWeekMobility = sum\n          }\n          if (this.allData[area]['weekday'][date] === undefined) {\n          } else {\n            this.allData[area].weekday[date].endHomeActs = sum\n          }\n        }\n      }\n\n      for (var i = 0; i < this.timelineWeekly.length; i++) {\n        var date = this.timelineWeekly[i].date\n        var area = this.timelineWeekly[i].area\n        var sum = this.timelineWeekly[i]['22-5']\n        if (this.allData[area] !== undefined) {\n          if (sum > this.maxWeekMobility) {\n            this.maxWeekMobility = sum\n          }\n          if (sum < this.minWeekMobility) {\n            this.minWeekMobility = sum\n          }\n          if (this.allData[area]['week'][date] === undefined) {\n          } else {\n            this.allData[area].week[date].endHomeActs = sum\n          }\n        }\n      }\n    },\n\n    combineData() {\n      for (var i = 0; i < this.allLandkreise.length; i++) {\n        this.allData[this.allLandkreise[i]] = []\n        this.allData[this.allLandkreise[i]]['week'] = []\n        this.allData[this.allLandkreise[i]]['weekend'] = []\n        this.allData[this.allLandkreise[i]]['weekday'] = []\n      }\n\n      for (var i = 0; i < this.mobilityWeekends.length; i++) {\n        var landkreis = this.mobilityWeekends[i].Landkreis\n        var date = this.mobilityWeekends[i].date\n        var duration = this.mobilityWeekends[i].outOfHomeDuration\n        var dailyRange = this.rangeWeeends[i].dailyRangePerPerson\n        var sharePerson = this.rangeWeeends[i].sharePersonLeavingHome\n\n        if (!this.allWeekDates.includes(date)) {\n          this.allWeekDates.push(date)\n        }\n\n        if (this.allData[landkreis] !== undefined) {\n          this.allData[landkreis]['weekend'][date] = {\n            outOfHomeDuration: duration,\n            percentageChangeComparedToBeforeCorona:\n              this.mobilityWeekends[i].percentageChangeComparedToBeforeCorona,\n            sharePersonLeavingHome: sharePerson,\n            dailyRangePerPerson: dailyRange,\n            endHomeActs: 0,\n          }\n        }\n      }\n\n      for (var i = 0; i < this.mobilityWeekdays.length; i++) {\n        var landkreis = this.mobilityWeekdays[i].Landkreis\n        var date = this.mobilityWeekdays[i].date\n        var dailyRange = this.rangeWeekdays[i].dailyRangePerPerson\n        var sharePerson = this.rangeWeekdays[i].sharePersonLeavingHome\n        if (!this.allWeekdayDates.includes(date)) {\n          this.allWeekdayDates.push(date)\n        }\n        var duration = this.mobilityWeekdays[i].outOfHomeDuration\n        if (this.allData[landkreis] !== undefined) {\n          this.allData[landkreis]['weekday'][date] = {\n            outOfHomeDuration: this.mobilityWeekdays[i].outOfHomeDuration,\n            percentageChangeComparedToBeforeCorona:\n              this.mobilityWeekdays[i].percentageChangeComparedToBeforeCorona,\n            sharePersonLeavingHome: sharePerson,\n            dailyRangePerPerson: dailyRange,\n            endHomeActs: 0,\n          }\n        }\n      }\n\n      const minLength = Math.min(this.mobilityWeekly.length, this.rangeWeekly.length)\n      for (var i = 0; i < minLength; i++) {\n        var landkreis = this.mobilityWeekly[i].Landkreis\n        var date = this.rangeWeekly[i].date\n        var dailyRange = this.rangeWeekly[i].dailyRangePerPerson\n        var sharePerson = this.rangeWeekly[i].sharePersonLeavingHome\n        if (landkreis == 'Landkreis St, Wendel') {\n          landkreis = 'Landkreis St. Wendel'\n        } else if (landkreis == 'Cottbus - Ch√≥?ebuz') {\n          landkreis = 'Cottbus - Ch√≥≈õebuz'\n        }\n        var duration = this.mobilityWeekly[i].outOfHomeDuration\n        if (typeof duration == 'string') {\n          duration = parseFloat(duration.replace(',', '.'))\n        }\n\n        if (this.allData[landkreis] !== undefined) {\n          this.allData[landkreis]['week'][date] = {\n            outOfHomeDuration: duration,\n            percentageChangeComparedToBeforeCorona:\n              this.mobilityWeekly[i].percentageChangeComparedToBeforeCorona,\n            sharePersonLeavingHome: sharePerson,\n            dailyRangePerPerson: dailyRange,\n            endHomeActs: 0,\n          }\n        }\n      }\n    },\n\n    async loadAllLandkreise() {\n      for (var i = 0; i < 402; i++) {\n        var landkreis = this.mobilityWeekends[i].Landkreis\n        if (landkreis != 'Landau in der Pfalz') {\n          this.allLandkreise.push(landkreis)\n        }\n      }\n      this.allLandkreise.sort()\n    },\n\n    async loadLandkreiseTimeline(url: string) {\n      try {\n        // load from subversion\n        const rawData = await fetch(url).then(response => response.text())\n        const parsed = Papaparse.parse(rawData, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n        }).data\n\n        // convert dates to ISO format\n\n        const withDates = parsed.map((row: any) => {\n          const d = row.date.toString()\n          row.date = `20${d.substring(6, 8)}-${d.substring(3, 5)}-${d.substring(0, 2)}`\n          return row\n        })\n\n        return withDates\n      } catch (e) {\n        this.dataLoadingFail = true\n        console.error(e)\n      }\n      return []\n    },\n\n    async loadLandkreisData(url: string) {\n      try {\n        // load from subversion\n        const rawData = await fetch(url).then(response => response.text())\n        const parsed = Papaparse.parse(rawData, {\n          delimiter: ';',\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n        }).data\n\n        // convert dates to ISO format\n        const withDates = parsed.map((row: any) => {\n          const d = row.date.toString()\n          row.date = `${d.substring(0, 4)}-${d.substring(4, 6)}-${d.substring(6, 8)}`\n          return row\n        })\n        return withDates\n      } catch (e) {\n        this.dataLoadingFail = true\n        console.error(e)\n      }\n      return []\n    },\n\n    // for (let thing of this.data[i])\n\n    /*\n\n  private async loadBundeslaender() {\n    var returnData: any[] = []\n    for (let i = 0; i < this.data.length; i++) {\n      if (!returnData.includes(this.data[i].BundeslandID)) {\n        returnData.push(this.data[i].BundeslandID)\n      }\n    }\n\n    return returnData\n  }\n  */\n\n    async openPage(url: string) {\n      var querySetting = this.$route.query\n      if (querySetting.date_one !== undefined) {\n        this.startdate = querySetting.date_one as string\n        this.queryParameter.date_one = querySetting.date_one as string\n      }\n      if (querySetting.date_two !== undefined) {\n        this.enddate = querySetting.date_two as string\n        this.queryParameter.date_two = querySetting.date_two as string\n      }\n      if (querySetting.county_one !== undefined) {\n        this.selectedLandkreisOne = querySetting.county_one as string\n        this.queryParameter.county_one = querySetting.county_one as string\n      } else {\n        this.selectedLandkreisOne = 'Berlin'\n        this.queryParameter.county_one = 'Berlin'\n      }\n\n      if (querySetting.county_two !== undefined) {\n        this.selectedLandkreisTwo = querySetting.county_two as string\n        this.queryParameter.county_two = querySetting.county_two as string\n      } else {\n        this.selectedLandkreisTwo = 'Deutschland'\n        this.queryParameter.county_two = 'Deutschland'\n      }\n\n      var urlSplit = url.split('?')[0].split('/')\n      console.log(urlSplit)\n      var urlInfo = urlSplit[urlSplit.length - 3]\n      if (urlSplit.includes('duration')) {\n        this.clickButton(1)\n      } else if (urlSplit.includes('distance')) {\n        this.clickButton(2)\n      } else if (urlSplit.includes('proportion-mobile-persons')) {\n        this.clickButton(3)\n      } else if (urlSplit.includes('nightly-activity')) {\n        this.clickButton(4)\n      } else {\n        this.clickButton(1)\n      }\n      if (urlSplit.includes('week')) {\n        this.clickButton(5)\n      } else if (urlSplit.includes('weekday')) {\n        this.clickButton(6)\n      } else if (urlSplit.includes('weekend')) {\n        this.clickButton(7)\n      } else {\n        this.clickButton(5)\n      }\n    },\n\n    async clickButton(statusNum: number) {\n      var queryStatement = '?'\n\n      for (const [key, value] of Object.entries(this.queryParameter)) {\n        if (value != '' && value !== undefined) {\n          queryStatement += key + '=' + value + '&'\n        }\n      }\n\n      if (queryStatement[queryStatement.length - 1] == '?') {\n        queryStatement = ''\n      } else if (queryStatement[queryStatement.length - 1] == '&') {\n        queryStatement = queryStatement.substr(0, queryStatement.length - 1)\n      }\n\n      if (statusNum > 4) {\n        var kind = ''\n        if (this.status == 1) {\n          kind = '/duration'\n        } else if (this.status == 2) {\n          kind = '/distance'\n        } else if (this.status == 3) {\n          kind = '/proportion-mobile-persons'\n        } else if (this.status == 4) {\n          kind = '/nightly-activity'\n        }\n        this.statusTime = statusNum\n        if (statusNum == 5) {\n          this.weekInterval = 'week'\n          window.history.pushState(\n            kind + 'week',\n            'Title',\n            '/mobility-counties' + kind + '/week' + queryStatement\n          )\n          if (!this.allWeekDates.includes(this.startdate)) {\n            this.startdate = this.allWeekDates[0]\n          }\n          if (!this.allWeekDates.includes(this.enddate)) {\n            this.enddate = this.allWeekDates[this.allWeekDates.length - 1]\n          }\n        } else if (statusNum == 6) {\n          if (!this.allWeekdayDates.includes(this.startdate)) {\n            this.startdate = this.allWeekdayDates[0]\n          }\n          if (!this.allWeekdayDates.includes(this.enddate)) {\n            this.enddate = this.allWeekdayDates[this.allWeekdayDates.length - 1]\n          }\n          this.weekInterval = 'weekday'\n          window.history.pushState(\n            'weekday',\n            'Title',\n            '/mobility-counties' + kind + '/weekday' + queryStatement\n          )\n        } else if (statusNum == 7) {\n          if (!this.allWeekDates.includes(this.startdate)) {\n            this.startdate = this.allWeekDates[0]\n          }\n          if (!this.allWeekDates.includes(this.enddate)) {\n            this.enddate = this.allWeekDates[this.allWeekDates.length - 1]\n          }\n          this.weekInterval = 'weekend'\n          window.history.pushState(\n            'weekend',\n            'Title',\n            '/mobility-counties' + kind + '/weekend' + queryStatement\n          )\n        }\n      } else {\n        var kind = ''\n        if (this.statusTime == 5) {\n          kind = '/week'\n        } else if (this.statusTime == 6) {\n          kind = '/weekday'\n        } else if (this.statusTime == 7) {\n          kind = '/weekend'\n        }\n        this.status = statusNum\n        if (statusNum == 1) {\n          this.activity = 'outOfHomeDuration'\n          this.yAxisNAme = 'Time per Day [h]'\n          this.plotHeading = 'Amount of Time Spent Outside the Home'\n          window.history.pushState(\n            'duration' + kind,\n            'Title',\n            '/mobility-counties/duration' + kind + queryStatement\n          )\n        } else if (statusNum == 2) {\n          this.activity = 'dailyRangePerPerson'\n          this.yAxisNAme = 'Distance per Person [km]'\n          this.plotHeading = 'Average distance traveled '\n          window.history.pushState(\n            'distance' + kind,\n            'Title',\n            '/mobility-counties/distance' + kind + queryStatement\n          )\n        } else if (statusNum == 3) {\n          this.activity = 'sharePersonLeavingHome'\n          this.yAxisNAme = 'Percent [%]'\n          this.plotHeading = 'Proportion of mobile persons'\n          window.history.pushState(\n            'proportion-mobile-persons' + kind,\n            'Title',\n            '/mobility-counties/proportion-mobile-persons' + kind + queryStatement\n          )\n        } else if (statusNum == 4) {\n          this.activity = 'endHomeActs'\n          this.yAxisNAme =\n            'Per day of out-of-home activity between 10 p.m. and 5 a.m. <br> per 1,000 inhabitants'\n          this.plotHeading = 'AENDERN'\n          window.history.pushState(\n            'nightly-activity' + kind,\n            'Title',\n            '/mobility-counties/nightly-activity' + kind + queryStatement\n          )\n        }\n      }\n    },\n\n    parseMarkdown(text: string) {\n      return markdownParser.render(text)\n    },\n\n    async buildPageForURL() {\n      this.badPage = false\n\n      const lang = this.$i18n.locale //  === 'de' ? '.de' : ''\n      const url = public_svn + `mobilityData/landkreise/config.${lang}.yaml`\n\n      let responseText = ''\n\n      try {\n        const response = await fetch(url)\n        responseText = await response.text()\n      } catch (e) {\n        console.error(e)\n      }\n\n      // maybe .de. doesn't exist, fallback .en.:\n      if (!responseText && url.indexOf('.de.') > -1) {\n        console.warn('no', url, 'falling back to .en.')\n        const en_url = url.replace('.de.', '.en.')\n        console.log(en_url)\n        try {\n          const response = await fetch(en_url)\n          responseText = await response.text()\n        } catch (e) {\n          console.error(e)\n        }\n      }\n\n      if (!responseText) {\n        this.badPage = true\n        return\n      }\n\n      this.yaml = YAML.parse(responseText)\n\n      this.buildUI()\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n.mplk {\n  background-color: $paleBackground;\n}\n\n.page-area {\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.colophon {\n  padding: 2rem 2rem 1rem 2rem;\n  text-align: right;\n  font-size: 0.85rem;\n  background-color: white;\n}\n\n.plot-area {\n  max-width: 60rem; //prevc: 70\n  width: 100%;\n  //width: 1200px;\n  margin: 0 auto;\n  padding: 2rem 3rem 5rem 3rem; //prev: uncomment\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n}\n\nh2 {\n  font-size: 2rem;\n}\n\nh3 {\n  font-weight: normal;\n  font-size: 1.3rem;\n  margin-bottom: -0.5rem;\n}\n\nh4 {\n  color: #596;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin: 0 0 0 0;\n  padding: 0 0;\n}\n\n.button {\n  padding: 0 0.5rem;\n  margin: 0 0.15rem 0.15rem 0;\n}\n\np {\n  margin-bottom: 1rem;\n}\n\n.banner {\n  display: flex;\n  flex-direction: column;\n  padding: 4rem 3rem 1rem 3rem;\n  background-color: #1e1f2c;\n  color: white;\n  background: url(../assets/images/banner.jpg);\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.banner h2 {\n  margin-bottom: 0rem;\n  font-size: 1.6rem;\n  background-color: #1e1f2c;\n  line-height: 1.6rem;\n  margin-right: auto;\n}\n\n.banner h3 {\n  font-size: 1.3rem;\n  font-weight: normal;\n  margin-bottom: 0;\n  line-height: 1.4rem;\n  padding-bottom: 0.25rem;\n  background-color: #1e1f2c;\n  width: max-content;\n}\n\n.base-buttons {\n  margin-bottom: 1rem;\n}\n\n.greenbig {\n  color: #596;\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.notes-item {\n  list-style-type: square;\n  margin-left: 1rem;\n  margin-top: 0.5rem;\n  color: #222;\n}\n\nli.notes-item {\n  line-height: 1.3rem;\n}\n\n.slider {\n  margin: 0 0;\n  // 0.5rem 0.5rem 0.5rem 0.5rem;\n}\n\n.slider-label {\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  font-weight: bold;\n  color: #383ab1;\n  margin: 1.5rem 0 0 -1.35rem;\n}\n\n.columns {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: row;\n}\n\n.column {\n  min-width: fit-content;\n  flex: 0;\n}\n\n.stretch {\n  margin-left: 1rem;\n  min-width: unset;\n  flex: 1;\n}\n\nul {\n  margin-bottom: 1rem;\n}\n\n.linear-plot {\n  margin-top: 0.5rem;\n  margin-left: 0;\n}\n\n.linear-plot h5 {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\nh5 {\n  margin-top: 0.5rem;\n}\n\n.plotarea {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 25rem;\n}\n\n.plotarea.tall {\n  grid-template-rows: 29rem;\n}\n\n.plotarea.map {\n  grid-template-rows: 49rem;\n}\n\n.plotarea.compact {\n  grid-template-rows: 15rem;\n}\n\n.plotarea.activities {\n  grid-template-rows: 18rem;\n}\n\n.plotsize {\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n}\n\np.plotsize {\n  z-index: 10;\n  margin: auto auto;\n}\n\n.all-plots {\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.all-plots {\n  display: flex;\n  flex-direction: column;\n}\n\n.right-side {\n  max-width: 60rem;\n  margin: 0 auto;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n}\n\n.right-side {\n  margin: 0 0.5rem;\n  max-width: none;\n}\n\n.left-area {\n  //background-color: white;\n  display: flex;\n  flex-direction: column;\n  padding-left: 3rem;\n  //padding-bottom: 2rem;\n  width: 100%;\n}\n\n.button-area {\n  display: flex;\n  flex-direction: column;\n  width: 864px;\n  margin: 0 auto;\n  margin-top: 2rem;\n  position: sticky;\n}\n\n.button-area h3 {\n  margin-bottom: 1rem;\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n.buttons {\n  width: 18rem;\n  background-color: white;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  padding-top: 1rem;\n  z-index: 10;\n  //position: sticky;\n  top: $navHeight;\n  padding-bottom: 1rem;\n  padding: 0rem 0.5rem 1rem 0.5rem;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  font-size: 0.75rem;\n}\n\n.dateselect {\n  width: 18rem;\n  background-color: white;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  padding-top: 1rem;\n  z-index: 10;\n  //position: sticky;\n  top: $navHeight;\n  padding-bottom: 1rem;\n  padding: 0.5rem 0.5rem 0.5rem 0.5rem;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  margin-bottom: 1rem;\n}\n\n.button:focus {\n  background-color: rgb(39, 112, 223);\n  color: white;\n}\n\n.button-choices {\n  background-color: white;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  //margin-bottom: 0.25rem;\n  padding: 0.5rem;\n  border-radius: 2px;\n  width: max-content;\n}\n\n.button-choices button {\n  font-size: 0.75rem;\n  border-radius: 2px;\n  box-shadow: none;\n  border: 1px, solid, transparent;\n}\n\n.date-choices {\n  background-color: white;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  //margin-bottom: 0.25rem;\n  padding: 0.5rem;\n  padding: 0.6rem 0rem 0.5rem 0.6rem;\n  border-radius: 2px;\n  width: max-content;\n  margin-right: 2rem;\n}\n\n.date-choices .date {\n  font-size: 0.75rem;\n  font-size: 0.75rem;\n  border-radius: 2px;\n  box-shadow: none;\n  border: 1px, solid, transparent;\n  margin-right: 0.75rem;\n}\n\n.date-choices p {\n  padding-top: 0.75rem;\n  margin-right: 0.75rem;\n  padding-left: 0.2rem;\n}\n\n.select-menue {\n  margin-right: 0.75rem;\n}\n\n.select-menue option {\n  width: min;\n}\n\n.button-row {\n  display: flex;\n}\n\n@media only screen and (max-width: 950px) {\n  .colophon {\n    display: none;\n  }\n\n  .option-groups {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  .button-area {\n    padding: 1rem 3rem 1rem 3rem;\n    width: auto;\n    margin: 0;\n  }\n\n  .button-choices {\n    width: max-content;\n  }\n\n  .left-area {\n    padding: 2rem 1rem;\n    flex-direction: column;\n  }\n}\n\n@media only screen and (max-width: 640px) {\n  .columns {\n    flex-direction: column;\n  }\n\n  .banner {\n    padding: 2rem 1rem;\n  }\n\n  .button-area {\n    padding: 1rem 3rem 1rem 3rem;\n    width: auto;\n    margin: 0rem 0.5rem;\n  }\n\n  .button-choices {\n    width: max-content;\n  }\n\n  .left-area {\n    padding: 2rem 1rem;\n    flex-direction: column;\n  }\n\n  .option-groups {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  .selections-and-charts {\n    flex-direction: column;\n  }\n\n  .plot-area {\n    margin: 0 0.5rem;\n    max-width: none;\n  }\n}\n\n/*\nh5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('week') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('week') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('week') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"'Kreis Olpe'\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'week'\"\n                    :yAxisName=\"yAxisNAme\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('weekday') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('weekday') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('weekday') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"'Kreis Olpe'\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'weekday'\"\n                    :yAxisName=\"yAxisNAme\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading') }} ({{ $t('weekend') }})\n              h5(v-else-if=\"status == 2\") {{ $t('distance-heading') }} ({{ $t('weekend') }})\n              h5(v-else-if=\"status == 3\") {{ $t('proportion-heading') }} ({{ $t('weekend') }})\n              .plotarea.tall\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"'Kreis Olpe'\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'weekend'\"\n                    :yAxisName=\"yAxisNAme\")\n\n              br\n\n              h5(v-if=\"status == 1\") {{ $t('duration-heading-percent') }}\n              .plotarea.tall(v-if=\"status == 1\")\n                  p.plotsize(v-if=\"dataLoadingFail\") Data not found...\n                  mobility-plot-landkreise.plotsize(v-else\n                    :landkreis=\"'Kreis Olpe'\" :data=\"allData\"\n                    :kind=\"activity\" :week=\"'week'\"\n                    :yAxisName=\"'Percent [%]'\")\n\n              br\n\n\n*/\n\n/*\n\n\nh5 {{ $t('germany-map') }}\n              .plotarea.map\n                  mobility-map.plotsize(\n                    :landkreisData=\"allData\", :startDate=\"startdate\", :endDate=\"enddate\")\n\n*/\n</style>\n"],"names":["_sfc_main$1","defineComponent","VuePlotly","mobilityData","tempData","xData","ydata","key","value","key2","value2","xDataTwo","ydataTwo","i18n","public_svn","markdownParser","MarkdownIt","_sfc_main","Colophon","MobilityPlot","MobilityMap","MobilityPlotLandkreise","landkreis","url","rawData","response","Papaparse","row","d","returnObj","csvName","jsonID","e","i","date","area","sum","duration","dailyRange","sharePerson","minLength","querySetting","urlSplit","statusNum","queryStatement","kind","text","lang","responseText","en_url","YAML"],"mappings":"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"}