{"version":3,"file":"V7-DmWC6b6P.js","sources":["../../src/runs/v7/SelectWidget.vue","../../src/runs/v7/ChartSelector.vue","../../src/assets/v7-notes.md?raw","../../src/assets/v7-notes-heinsberg.md?raw","../../src/runs/v7/V7.vue"],"sourcesContent":["<template lang=\"pug\">\n.slector-widget\n  .button-choices(v-if=\"showButtons\")\n    button.button.is-small(\n      v-for=\"choice in stops\"\n      :class=\"{'is-link': choice===value}\"\n      :key=\"choice\"\n      @click='choseButton(choice)') {{ choice }}\n\n  p {{ measureTitle }}\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'SelectWidget',\n  components: {},\n  props: {\n    state: { type: Object, required: true },\n    measure: { type: String, required: true },\n  },\n  data() {\n    return {\n      value: 0 as any,\n      stops: [0, 1000] as any,\n      showButtons: false,\n      interventions: {\n        remainingFractionLeisure1: 'Leisure activities',\n\n        remainingFractionWork: 'Work activities',\n        remainingFractionLeisure2: 'Leisure activities',\n        remainingFractionShoppingBusinessErrands: 'All other activities',\n\n        remainingFractionKiga: 'Going to kindergarten',\n        remainingFractionPrima: 'Going to primary school',\n        remainingFractionSecon: 'Going to secondary/univ.',\n      } as any,\n    }\n  },\n\n  mounted() {\n    this.updateOptions()\n  },\n\n  computed: {\n    measureTitle() {\n      return this.interventions[this.measure]\n    },\n  },\n\n  watch: {\n    value() {\n      let answer = this.value.substring(0, this.value.length - 1)\n      answer = parseFloat(answer) / 100.0\n      this.$emit('changed', this.measure, answer)\n    },\n  },\n\n  methods: {\n    choseButton(choice: string) {\n      console.log(choice)\n      this.value = choice\n    },\n\n    updateOptions() {\n      const experiments = []\n\n      for (const x of this.state.measures[this.measure]) {\n        let label = '' + x * 100 + '%'\n\n        this.value = label // select first choice\n        this.showButtons = true\n\n        experiments.push(label)\n      }\n\n      this.stops = experiments\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.my-slider {\n  margin-top: 1rem;\n}\n\n.button-choices {\n  margin-left: 0;\n  margin-top: 1rem;\n}\n\n.button-choices button {\n  margin-right: 0.2rem;\n}\n\n@media only screen and (max-width: 768px) {\n  .my-slider {\n    margin-top: 0.25rem;\n  }\n}\n</style>\n","<template lang=\"pug\">\n.charts-selector\n  .preamble\n    h3.select-scenario Select Scenario:\n\n  #main-section\n    .pieces\n      .sliders\n        .button-choices.buttons.has-addons\n          button.button.is-small(\n            :class=\"{'is-link': !isBase, 'is-selected': !isBase}\"\n            :key=\"'do-something'\" @click='setBase(false)') Alternatives\n          button.button.is-small(\n            :class=\"{'is-link': isBase, 'is-selected': isBase}\"\n            :key=\"'base'\" @click='setBase(true)') What would have happened w/o restrictions\n\n        .selection-widgets(:class=\"{'totally-disabled': isBase}\")\n          .heinsberg(v-if=\"city==='heinsberg'\")\n            .g1\n              h6.title February 26:\n                br\n                | Activities limited\n              p.subhead Percent still occurring (%)\n              .myslider(v-if=\"Object.keys(state.measures).length\"\n                v-for=\"measure in ['remainingFractionWork', 'remainingFractionLeisure1', 'remainingFractionShoppingBusinessErrands']\"\n                :key=\"'h' + measure\")\n                my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n            .g1\n              h6.title April 20:\n                br\n                | Reopening of educational facilities\n              p.subhead Students returning (%):\n              .myslider(v-if=\"Object.keys(state.measures).length\"\n                v-for=\"measure in ['remainingFractionKiga', 'remainingFractionPrima', 'remainingFractionSecon']\" :key=\"'h' + measure\")\n                my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n          .berlin-munich(v-else)\n            .g1\n              h6.title March 14:\n                br\n                | Leisure activities limited\n              p.subhead Percent still occurring (%)\n              .myslider(v-if=\"Object.keys(state.measures).length\" v-for=\"measure in ['remainingFractionLeisure1']\" :key=\"measure\")\n                my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n            .g1\n              h6.title March 23:\n                br\n                | Out-of-home activities limited\n              p.subhead By type and percent (%)\n              .myslider(v-if=\"Object.keys(state.measures).length\"\n                v-for=\"measure in ['remainingFractionWork', 'remainingFractionLeisure2', 'remainingFractionShoppingBusinessErrands']\"\n                :key=\"measure\")\n                my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n            .g1\n              h6.title April 20:\n                br\n                | Reopening of educational facilities\n              p.subhead Students returning (%):\n              .myslider(v-if=\"Object.keys(state.measures).length\"\n                v-for=\"measure in ['remainingFractionKiga', 'remainingFractionPrima', 'remainingFractionSecon']\" :key=\"measure\")\n                my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n        h5.cumulative Cumulative Infected by September 2020\n        p.infected {{ prettyInfected }}\n\n      .all-plots\n\n        .plot-options\n          .scale-options\n            b Scale\n            .variation-choices.buttons.has-addons\n              button.button.is-small(\n                :class=\"{'is-link': !logScale, 'is-selected': !logScale}\"\n                @click=\"logScale = !logScale\") Linear\n              button.button.is-small(\n                :class=\"{'is-link': logScale, 'is-selected': logScale}\"\n                @click=\"logScale = !logScale\") Log\n\n          .variation\n            b Shift Start Date\n            .variation-choices.buttons.has-addons\n              button.button.is-small(v-if=\"city !== 'munich'\"\n                :class=\"{'is-link': plusminus === '6', 'is-selected': plusminus === '6'}\"\n                @click=\"setPlusMinus('6')\") -6\n              button.button.is-small(v-if=\"city !== 'munich'\"\n                :class=\"{'is-link': plusminus === '3', 'is-selected': plusminus === '3'}\"\n                @click=\"setPlusMinus('3')\") -3\n              button.button.is-small(\n                :class=\"{'is-link': plusminus === '0', 'is-selected': plusminus === '0'}\"\n                @click=\"setPlusMinus('0')\") +0\n              button.button.is-small(\n                :class=\"{'is-link': plusminus === '-3', 'is-selected': plusminus === '-3'}\"\n                @click=\"setPlusMinus('-3')\") +3\n              button.button.is-small(\n                :class=\"{'is-link': plusminus === '-6', 'is-selected': plusminus === '-6'}\"\n                @click=\"setPlusMinus('-6')\") +6\n\n        .linear-plot\n          h5 {{ cityCap }} Simulated Health Outcomes Over Time\n          p {{ this.logScale ? 'Log scale' : 'Linear scale' }}\n          vue-plotly.plotsize(:data=\"data\" :layout=\"layout\" :options=\"options\")\n\n        .linear-plot(v-if=\"city ==='berlin'\")\n          h5 {{ cityCap }} Hospitalization Rate Comparison\n          p {{ this.logScale ? 'Log scale' : 'Linear scale' }}\n          hospitalization-plot.plotsize.compact(:data=\"data\" :logScale=\"logScale\" :city=\"city\"\n                                                endDate=\"2020-08-31\")\n\n        .linear-plot\n          h5 {{ cityCap }} Estimated Multipliers\n          p Based on four-day new infections\n          r-value-plot.plotsize.compact(:data=\"data\" :logScale=\"false\" endDate=\"2020-08-31\")\n\n</template>\n\n<script lang=\"ts\">\n// ###########################################################################\nimport Papa from '@simwrapper/papaparse'\nimport VuePlotly from '@/components/VuePlotly.vue'\nimport ZipLoader from 'zip-loader'\nimport moment from 'moment'\n\nimport MySlider from './SelectWidget.vue'\nimport HospitalizationPlot from '@/views/v2/HospitalizationPlot.vue'\nimport RValuePlot from '@/views/v2/RValuePlot.vue'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ChartSelector',\n  components: { HospitalizationPlot, MySlider, RValuePlot, VuePlotly },\n  props: {\n    state: { type: Object, required: true },\n    city: { type: String, required: true },\n  },\n\n  data: () => {\n    return {\n      dayZero: {\n        berlin: '2020-02-20',\n        munich: '2020-02-20',\n        heinsberg: '2020-02-15',\n      } as any,\n\n      MAX_DAYS: 200,\n      plusminus: '0',\n      logScale: true,\n      isBase: false,\n\n      currentRun: {} as any,\n      data: [] as any[],\n\n      currentSituation: {} as any,\n      loadedSeriesData: {} as any,\n      zipLoader: {} as any,\n      zipCache: {} as any,\n\n      labels: {\n        nSusceptible: 'Susceptible',\n        nInfectedButNotContagious: 'Infected, not contagious',\n        nContagious: 'Contagious',\n        nShowingSymptoms: 'Showing Symptoms',\n        nSeriouslySick: 'Seriously Sick',\n        nCritical: 'Critical',\n        nTotalInfected: 'Total Infected',\n        nInfectedCumulative: 'Infected Cumulative',\n        nRecovered: 'Recovered',\n        nInQuarantine: 'In Quarantine',\n      } as any,\n\n      layout: {\n        autosize: true,\n        showlegend: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { t: 5, r: 10, b: 0, l: 60 },\n        xaxis: {\n          range: ['2020-02-09', '2020-08-31'],\n          type: 'date',\n        },\n        yaxis: {\n          type: 'log',\n          autorange: true,\n          title: 'Population (log scale)',\n        },\n        plot_bgcolor: '#f8f8f8',\n        paper_bgcolor: '#f8f8f8',\n      },\n\n      options: {\n        // displayModeBar: true,\n        displaylogo: false,\n        responsive: true,\n        modeBarButtonsToRemove: [\n          'pan2d',\n          'zoom2d',\n          'select2d',\n          'lasso2d',\n          'zoomIn2d',\n          'zoomOut2d',\n          'autoScale2d',\n          'hoverClosestCartesian',\n          'hoverCompareCartesian',\n          'resetScale2d',\n          'toggleSpikelines',\n          'resetViewMapbox',\n        ],\n        toImageButtonOptions: {\n          format: 'svg', // one of png, svg, jpeg, webp\n          filename: 'custom_image',\n          width: 800,\n          height: 600,\n          scale: 1.0, // Multiply title/legend/axis/canvas sizes by this factor\n        },\n      },\n\n      fillcolors: {\n        Susceptible: '#0000ff',\n        'Seriously Sick': '#cc2211',\n        'Showing Symptoms': '#00ffff',\n        'Infected Cumulative': '#f791cf',\n        'Infected, not contagious': '#ee8800',\n        Critical: '#882299',\n        Recovered: '#eedd44',\n        Contagious: '#00aa00',\n        'Total Infected': '#a65628',\n      } as any,\n    }\n  },\n\n  mounted() {\n    this.loadZipData()\n  },\n\n  computed: {\n    cityCap() {\n      return this.city.slice(0, 1).toUpperCase() + this.city.slice(1)\n    },\n\n    prettyInfected() {\n      if (!this.state.cumulativeInfected) return ''\n\n      const rounded = 100 * Math.round(this.state.cumulativeInfected * 0.01)\n      return Number(rounded).toLocaleString()\n    },\n  },\n\n  watch: {\n    city() {\n      // Munich doesn't have +3 / +6\n      if (this.city !== 'berlin' && parseInt(this.plusminus) > 0) this.plusminus = '0'\n\n      this.loadedSeriesData = {}\n      this.loadZipData()\n    },\n\n    plusminus() {\n      this.showPlotForCurrentSituation()\n    },\n\n    logScale() {\n      this.layout.yaxis.type = this.logScale ? 'log' : 'linear'\n      this.layout = { ...this.layout }\n    },\n  },\n\n  methods: {\n    setBase(value: boolean) {\n      this.isBase = value\n      this.showPlotForCurrentSituation()\n    },\n\n    setPlusMinus(value: string) {\n      this.plusminus = value\n    },\n\n    async loadZipData() {\n      console.log('loadZipData:', this.city)\n      // check cache first!\n      if (this.zipCache[this.city]) {\n        console.log('using cached zip for!', this.city)\n        this.zipLoader = this.zipCache[this.city]\n      } else {\n        // load the zip from file\n        const filepath = this.state.publicPath + 'v7-data-' + this.city + '.zip'\n        console.log('---loading', filepath)\n        this.zipLoader = new ZipLoader(filepath)\n        await this.zipLoader.load()\n        console.log('zip loaded!')\n      }\n\n      this.zipCache[this.city] = this.zipLoader\n      this.runChanged()\n      console.log({ measure: this.state.measures })\n    },\n\n    async runChanged() {\n      // maybe we already did the calcs\n      if (this.loadedSeriesData[this.currentRun.RunId]) {\n        this.data = this.loadedSeriesData[this.currentRun.RunId]\n        this.updateTotalInfected()\n        return\n      }\n\n      // load both datasets\n      const csvLow: any[] = await this.loadCSV(this.currentRun)\n      const timeSeriesesLow = this.generateSeriesFromCSVData(csvLow)\n\n      // cache the result\n      this.loadedSeriesData[this.currentRun.RunId] = timeSeriesesLow\n\n      this.data = timeSeriesesLow\n      this.updateTotalInfected()\n    },\n\n    updateTotalInfected() {\n      const infectedCumulative = this.data.filter(a => a.name === 'Infected Cumulative')[0]\n      this.state.cumulativeInfected = Math.max(...infectedCumulative.y)\n    },\n\n    sliderChanged(measure: any, value: any) {\n      console.log(measure, value)\n      this.currentSituation[measure] = value\n      this.showPlotForCurrentSituation()\n    },\n\n    showPlotForCurrentSituation() {\n      if (this.isBase) {\n        this.currentRun = { RunId: 'sz0' }\n        this.runChanged()\n        return\n      }\n\n      let lookupKey = ''\n      for (const measure of Object.keys(this.state.measures))\n        lookupKey += this.currentSituation[measure] + '-'\n\n      const suffix = this.plusminus //  === '5' ? '5' : '-5'\n      const lookup = lookupKey.replace('undefined', suffix)\n\n      console.log(lookup)\n\n      this.currentRun = this.state.runLookup[lookup]\n\n      if (!this.currentRun) return\n\n      this.runChanged()\n    },\n\n    unpack(rows: any[], key: any) {\n      let v = rows.map(function (row) {\n        if (key === 'day') return row[key]\n        return row[key]\n      })\n\n      v = v.slice(0, this.MAX_DAYS)\n\n      // maybe the sim ended early - go out to 150 anyway\n      if (v.length < this.MAX_DAYS) {\n        v.push(key === 'day' ? this.MAX_DAYS : v[v.length - 1])\n      }\n      return v\n    },\n\n    async loadCSV(currentRun: any) {\n      if (!currentRun.RunId) return []\n\n      const filename = currentRun.RunId + '.infections.csv'\n      console.log('Extracting', filename)\n\n      let text = this.zipLoader.extractAsText(filename)\n      const z = Papa.parse(text, { header: true, dynamicTyping: true, skipEmptyLines: true })\n\n      return z.data\n    },\n\n    calculateDatefromSimulationDay(day: number) {\n      const shift = parseInt(this.plusminus)\n\n      const date = moment(this.dayZero[this.city])\n        .subtract(shift, 'days')\n        .add(day, 'days')\n        .format('YYYY-MM-DD')\n      return date\n    },\n\n    generateSeriesFromCSVData(data: any[]) {\n      const serieses = []\n\n      const days: number[] = this.unpack(data, 'day')\n      const x = days.map(d => this.calculateDatefromSimulationDay(d))\n\n      for (const column of Object.keys(this.labels)) {\n        const name = this.labels[column]\n\n        if (name === 'In Quarantine') continue\n\n        const y: number[] = this.unpack(data, column)\n        serieses.push({ x, y, name })\n      }\n\n      // Add Berlin \"Reported Cases\"\n      // if (this.city === 'berlin') serieses.push(this.state.berlinCases)\n      serieses.push(this.state.berlinCases)\n\n      return serieses\n    },\n  },\n})\n\n// ###########################################################################\n</script>\n\n<style scoped lang=\"scss\">\n#main-section {\n  display: flex;\n  flex-direction: row;\n}\n\nh5 {\n  font-weight: bold;\n  font-size: 18px;\n}\n\nh6 {\n  font-size: 1.1rem;\n}\n\n.pieces {\n  padding: 0rem 0rem;\n  display: grid;\n  width: 100%;\n  grid-gap: 0rem;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto;\n}\n\n.pieces h3 {\n  color: #667883;\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 0.5rem;\n  margin: 1rem 1rem 2rem 0rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n}\n\n.sliders {\n  grid-column: 1 / 2;\n  grid-row: 1 / 4;\n  margin-right: 1rem;\n  width: 17rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.all-plots {\n  margin-left: 1rem;\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  display: flex;\n  flex-direction: column;\n}\n\n.log-plot {\n  background-color: #f8f8f8;\n  padding: 0.5rem 0.75rem 0.5rem 0.5rem;\n  margin: 0 0 1rem 1rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ccc;\n}\n\n.linear-plot {\n  background-color: #f8f8f8;\n  padding: 0.5rem 0.75rem 0.5rem 0.5rem;\n  margin: 0rem 0 2rem 1rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ccc;\n}\n\nh5 {\n  margin-top: 0.5rem;\n}\n\n.plotsize {\n  height: 25rem;\n}\n\n.plotsize.compact {\n  height: 15rem;\n}\n\np.subhead {\n  margin-top: -0.25rem;\n}\n\n.myslider {\n  width: 100%;\n}\n\n.plot {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  padding: 1rem 0rem;\n}\n\n.plot-options {\n  display: flex;\n  flex-direction: row;\n  margin-left: 1rem;\n}\n\n.infected {\n  padding-left: 0rem;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-top: 0rem;\n  margin-left: 1rem;\n  color: rgb(151, 71, 34);\n}\n\n.button-choices {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 0.25rem;\n}\n\n.button-choices button {\n  width: 100%;\n}\n\n.title {\n  line-height: 1.4rem;\n  margin: 1rem 0 0.5rem 0;\n}\n\n.totally-disabled {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.g1 {\n  padding: 0rem 0.5rem 1rem 0.5rem;\n  margin-bottom: 2rem;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n}\n\n.cumulative {\n  margin-top: 1rem;\n  margin-left: 1rem;\n}\n\n.preamble {\n  display: flex;\n  flex-direction: row;\n  margin-top: 2rem;\n}\n\n.variation {\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-bottom: 0.3rem;\n  text-align: right;\n}\n\n.variation-choices {\n  padding: 0 0;\n}\n\n@media only screen and (max-width: 640px) {\n  #main-section {\n    flex-direction: column;\n    padding: 0 0;\n    margin: 0 0rem;\n  }\n\n  p.infected {\n    margin-bottom: 1rem;\n  }\n\n  .pieces {\n    padding: 1rem 0rem;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .log-plot {\n    margin-left: 0;\n  }\n\n  .linear-plot {\n    margin-top: 2rem;\n    margin-left: 0;\n  }\n  .sliders {\n    width: 15rem;\n  }\n}\n</style>\n","export default \"## v7: Re-opening Scenarios\\n\\n_Published 22 April 2020_\\n\\nHere we depict the effects of reopening society at various levels for work, school, leisure and other activities.\\n\\n- Simulations are for **Berlin**, **Munich**, and **Heinsberg** regions (each city plus some surroundings).\\n- Real-world infections are from [Robert Koch Institute (RKI)](https://npgeo-corona-npgeo-de.hub.arcgis.com/datasets/dd4580c810204019a7b8eb3e0b329dd6_0). For many cases, a delay between infection and reporting may occur.\\n- For Berlin and Munich, the following activity restrictions are included:\\n  - After **March 13**, 10% of leisure acts are banned (corresponding to the closure of theaters, etc.). Also, schools / kindergarten / universities are closed. 10 percent of kita and primary-aged children still go to kita / primary schools (Notbetrieb).\\n  - On **March 23**, work, shopping, errands and business are reduced, corresponding to the currently valid \\\"Kontaktsperre\\\"; the percentage of work, leisure, shopping, errands and business activities still occuring after **March 23** can be set.\\n  - Educational facilities can be reopened on **April 20**.\\n\\n{{PLOTS}}\\n\\n[Google COVID-19 Mobility report](https://google.com/covid19/mobility) shows for Berlin after March 23:\\n\\n- retail & recreation down by about 70% (i.e. at about **30%**)\\n- grocery & pharmacy down by about 20% (i.e. at about **80%**)\\n- parks down by about 20% (i.e. at about **80%**)\\n- workplace down by about 40% (i.e. at about **60%**)\\n  Other than google, we do not take the last day, but take visual averages over about a week.\\n\\nThe best approximation to this with our options below would be:\\n\\n- **leisure** at **20%** (with the assumption that parks do not contribute that much to infections)\\n- **work** at **60%**\\n- **shopping** at **40%**\\n- **errands & business** at **40%**\\n\\nIf one assumes that the capacity of the Berlin system for critical COVID cases is about 1000, then one finds that there is scant little room to relax restrictions.\\n\\nOr alternatively: The currently \\\"blunt\\\" restrictions would need to be replaced by something smarter.\\n\\nWhat has changed comparing to v6/v5?\\n\\n- Age-dependent disease progression model\\n- we now only display results for people living in the corresponding city. Before, results included people travelling to/from the corresponding city.\\n\"","export default \"## v7: Re-opening Scenarios\\n\\n_Published 22 April 2020_\\n\\nHere we depict the effects of reopening society at various levels for work, school, leisure and other activities.\\n\\n- Simulations are for **Berlin**, **Munich**, and **Heinsberg** regions (each city plus some surroundings).\\n- Real-world infections are from [Robert Koch Institute (RKI)](https://npgeo-corona-npgeo-de.hub.arcgis.com/datasets/dd4580c810204019a7b8eb3e0b329dd6_0). For many cases, a delay between infection and reporting may occur.\\n- For Heinsberg, the following activity restrictions are included:\\n  - On **February 26**, schools are closed and other activities restricted.\\n  - Educational facilities can be reopened on **April 20**.\\n\\n{{PLOTS}}\\n\\n[Google COVID-19 Mobility report](https://google.com/covid19/mobility) shows for Berlin after March 23:\\n\\n- retail & recreation down by about 70% (i.e. at about **30%**)\\n- grocery & pharmacy down by about 20% (i.e. at about **80%**)\\n- parks down by about 20% (i.e. at about **80%**)\\n- workplace down by about 40% (i.e. at about **60%**)\\n  Other than google, we do not take the last day, but take visual averages over about a week.\\n\\nThe best approximation to this with our options below would be:\\n\\n- **leisure** at **20%** (with the assumption that parks do not contribute that much to infections)\\n- **work** at **60%**\\n- **shopping** at **40%**\\n- **errands & business** at **40%**\\n\\nIf one assumes that the capacity of the Berlin system for critical COVID cases is about 1000, then one finds that there is scant little room to relax restrictions.\\n\\nOr alternatively: The currently \\\"blunt\\\" restrictions would need to be replaced by something smarter.\\n\"","<template lang=\"pug\">\n.v7app\n  .city-picker\n    router-link.which-city(v-for=\"zcity in cities\"\n      :key=\"zcity\" :class=\"{'selected': zcity.toLowerCase()===city.toLowerCase()}\"\n      :to=\"'/v7/' + zcity.toLowerCase()\")\n      h1 {{ zcity }}\n\n  .content\n    .readme(v-html=\"topNotes\")\n\n  .view-section\n    section-viewer.viewer(v-if=\"city\" :state=\"state\" :city=\"city\")\n\n  .content\n    .bottom(v-if=\"bottomNotes\")\n      h3 Further Notes\n      .readme(v-html=\"bottomNotes\")\n\n</template>\n\n<script lang=\"ts\">\n// ###########################################################################\nimport Papa from '@simwrapper/papaparse'\n\nimport SectionViewer from './ChartSelector.vue'\nimport { PUBLIC_SVN } from '@/Globals'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport Markdown from 'markdown-it'\nimport v7notes from '@/assets/v7-notes.md?raw'\nimport v7heinsbergNotes from '@/assets/v7-notes-heinsberg.md?raw'\n\nconst mdParser = new Markdown({\n  html: true,\n  linkify: true,\n  typographer: true,\n})\n\nconst htmlBerlin = mdParser.render(v7notes)\nconst htmlMunich = mdParser.render(v7notes)\nconst htmlHeinsberg = mdParser.render(v7heinsbergNotes)\n\nconst RKI_URL = PUBLIC_SVN + 'original-data/Fallzahlen/RKI/'\n\nexport default defineComponent({\n  name: 'V7',\n  components: { SectionViewer },\n  props: {},\n  data() {\n    return {\n      state: {\n        measures: {},\n        runLookup: {},\n        cumulativeInfected: 0,\n        berlinCases: {} as any,\n        publicPath: '/',\n      },\n      city: '',\n      plusminus: '0',\n\n      readme: {\n        berlin: htmlBerlin,\n        munich: htmlMunich,\n        heinsberg: htmlHeinsberg,\n      } as any,\n\n      plotTag: '{{PLOTS}}',\n\n      capitalizeCity: {\n        berlin: 'Berlin',\n        munich: 'Munich',\n        heinsberg: 'Heinsberg',\n      } as any,\n\n      cityCSV: {\n        berlin: RKI_URL + 'berlin-cases.csv',\n        munich: RKI_URL + 'munich-cases.csv',\n        heinsberg: RKI_URL + 'heinsberg-cases.csv',\n      } as any,\n    }\n  },\n\n  async mounted() {\n    console.log({ route: this.$route })\n    this.city = this.$route.params.city\n\n    await this.loadDataInBackground(this.city)\n  },\n\n  computed: {\n    cities() {\n      return ['Berlin', 'Munich', 'Heinsberg']\n    },\n\n    topNotes() {\n      if (!this.city) return ''\n      const notes = this.readme[this.city]\n      if (!notes) return ''\n\n      const i = notes.indexOf(this.plotTag)\n\n      if (i < 0) return notes\n      return notes.substring(0, i)\n    },\n\n    bottomNotes() {\n      if (!this.city) return ''\n      const notes = this.readme[this.city]\n      if (!notes) return ''\n\n      const i = notes.indexOf(this.plotTag)\n\n      if (i < 0) return ''\n      return notes.substring(i + this.plotTag.length)\n    },\n  },\n\n  watch: {\n    async $route(to: any, from: any) {\n      console.log(to)\n      const newCity = to.params.city\n      await this.loadDataInBackground(newCity)\n      this.city = newCity // switch city AFTER new data is loaded. Things @watch the city\n    },\n  },\n\n  methods: {\n    async loadDataInBackground(newCity: string) {\n      this.state.berlinCases = await this.prepareBerlinData(newCity)\n\n      const filepath = this.state.publicPath + 'v7-info-' + newCity + '.txt'\n      const parsed = await this.loadCSVData(filepath)\n      await this.generateScenarioMatrix(parsed)\n    },\n\n    async prepareBerlinData(newCity: string) {\n      const response = await fetch(this.cityCSV[newCity])\n      const csvContents = await response.text()\n\n      const data = Papa.parse(csvContents, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n      }).data\n\n      console.log({ data })\n\n      const dates: any = []\n      const cases: any = []\n      let cumulative = 0\n\n      console.log('fetched city data:', data.length)\n\n      // pull the cases field out of the CSV\n      for (const datapoint of data) {\n        const day = datapoint.year + '-' + datapoint.month + '-' + datapoint.day\n        dates.push(day)\n\n        cumulative += datapoint.cases\n        cases.push(cumulative)\n      }\n\n      const series = {\n        name: this.capitalizeCity[newCity] + ' Infections (RKI)',\n        x: dates,\n        y: cases,\n        line: {\n          dash: 'dot',\n          width: 3,\n          color: 'rgb(0,200,150)',\n        },\n      }\n\n      console.log({ berlinSeries: series })\n      return series\n    },\n\n    async loadCSVData(filepath: string) {\n      console.log('fetching data')\n      const response = await fetch(filepath)\n      const text = await response.text()\n      const parsed: any = Papa.parse(text, { header: true, dynamicTyping: true })\n      console.log({ parsed: parsed.data })\n\n      return parsed.data\n    },\n\n    async generateScenarioMatrix(parsed: any[]) {\n      console.log('generating lookups')\n      const measures: any = {}\n      const runLookup: any = {}\n\n      // first get column names for the measures that have been tested\n      const ignore = ['Config', 'Output', 'RunId', 'RunScript']\n\n      for (const label of Object.keys(parsed[0])) {\n        if (ignore.indexOf(label) > -1) continue\n        measures[label] = new Set()\n      }\n\n      // get all possible values\n      for (const run of parsed) {\n        if (!run.RunId) continue\n\n        // note this particular value, for every value\n        for (const measure of Object.keys(measures)) {\n          if (run[measure] === 0 || run[measure]) measures[measure].add(run[measure])\n        }\n\n        // store the run in a lookup using all values as the key\n        let lookupKey = ''\n        for (const measure of Object.keys(measures)) lookupKey += run[measure] + '-'\n        runLookup[lookupKey] = run\n      }\n\n      for (const measure of Object.keys(measures)) {\n        measures[measure] = Array.from(measures[measure].keys()).sort((a: any, b: any) => a - b)\n      }\n\n      console.log({ measures, runLookup })\n      this.state.measures = measures\n      this.state.runLookup = runLookup\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n.content {\n  padding: 0rem 3rem;\n  margin: 2rem 0 2rem 0;\n  max-width: 70em;\n  display: flex;\n  flex-direction: column;\n}\n\n.content h3.select-scenario {\n  margin-bottom: 0;\n}\n\n.view-section {\n  background: white;\n  width: 100%;\n  padding: 0 3rem;\n}\n\n.viewer {\n  padding: 0rem 0rem;\n  margin: 0rem 0rem;\n  max-width: 70em;\n  display: flex;\n  flex-direction: column;\n}\n\n.city-picker {\n  display: flex;\n  background-color: $bannerHighlight;\n  padding: 0.3rem 3rem 0 3rem;\n}\n\n.which-city {\n  padding: 0rem 2rem 0.2rem 2rem;\n  margin-top: 0.1rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  text-transform: capitalize;\n}\n\na.which-city {\n  color: #bbb;\n}\n\n.selected {\n  padding-top: 0.1rem;\n  background-color: $paleBackground;\n}\n\na.selected {\n  color: black;\n}\n\n.bottom {\n  margin-top: 1rem;\n}\n\n@media only screen and (max-width: 640px) {\n  .content {\n    padding: 1rem 1rem;\n    margin-top: 1rem;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    row-gap: 1rem;\n  }\n\n  .view-section {\n    padding: 0 1rem;\n  }\n  .which-city {\n    padding: 0.5rem 1rem;\n  }\n}\n</style>\n"],"names":["_sfc_main$2","defineComponent","answer","choice","experiments","x","label","_sfc_main$1","HospitalizationPlot","MySlider","RValuePlot","VuePlotly","rounded","value","filepath","ZipLoader","csvLow","timeSeriesesLow","infectedCumulative","a","measure","lookupKey","suffix","lookup","rows","key","v","row","currentRun","filename","text","Papa","day","shift","moment","data","serieses","d","column","name","y","v7notes","v7heinsbergNotes","mdParser","Markdown","htmlBerlin","htmlMunich","htmlHeinsberg","RKI_URL","PUBLIC_SVN","_sfc_main","SectionViewer","notes","i","to","from","newCity","parsed","csvContents","dates","cases","cumulative","datapoint","series","measures","runLookup","ignore","run","b"],"mappings":"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"}