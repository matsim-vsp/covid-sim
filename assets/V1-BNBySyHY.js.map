{"version":3,"file":"V1-BNBySyHY.js","sources":["../../src/runs/v1/SelectWidget.vue","../../src/runs/v1/ChartSelector.vue","../../src/assets/v1-notes.md?raw","../../src/runs/v1/V1.vue"],"sourcesContent":["<template lang=\"pug\">\n#slider-thing\n  vue-slide-bar.my-slider(:speed=\"0\" :data=\"stops\" v-model=\"value\")\n  p {{ measure }}\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport VueSlideBar from 'vue-slide-bar'\n\nexport default defineComponent({\n  name: 'SelectWidget',\n  components: { VueSlideBar },\n  props: {\n    state: { type: Object, required: true },\n    measure: { type: String, required: true },\n  },\n\n  data() {\n    return {\n      value: 0 as any,\n      stops: [0, 1000],\n    }\n  },\n\n  mounted() {\n    const experiments = []\n    for (const x of this.state.measures[this.measure]) {\n      experiments.push(x === 1000 ? 'Never' : x)\n    }\n\n    this.stops = experiments\n    this.value = 'Never'\n  },\n\n  watch: {\n    value() {\n      let answer = this.value\n      if (answer === 'Never') answer = 1000\n      this.$emit('changed', this.measure, answer)\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.my-slider {\n  margin-top: 1rem;\n}\n\n@media only screen and (max-width: 768px) {\n  .my-slider {\n    margin-top: 0.25rem;\n  }\n}\n</style>\n","<template lang=\"pug\">\n#main-section\n  .pieces\n    .sliders\n      h5 Intervention Options\n      p.subhead Days after outbreak begins:\n\n      .myslider(v-for=\"measure in Object.keys(state.measures)\" :key=\"measure\")\n        my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n    .linear-plot\n      h5 Simulated Population Health Outcomes Over Time\n      p Linear scale\n      vue-plotly.plotsize(:data=\"data\" :layout=\"layout\" :options=\"options\")\n\n    .log-plot\n      h5 Simulated Population Health Outcomes Over Time\n      p Log scale\n      vue-plotly.plotsize(:data=\"data\" :layout=\"loglayout\" :options=\"options\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport ZipLoader from 'zip-loader'\nimport Papa from '@simwrapper/papaparse'\n\nimport MySlider from './SelectWidget.vue'\nimport VuePlotly from '@/components/VuePlotly.vue'\n\nexport default defineComponent({\n  name: 'ChartSelector',\n  components: { MySlider, VuePlotly },\n  props: {\n    state: { type: Object, required: true },\n  },\n\n  data() {\n    return {\n      zipFile: '/v1-data.zip',\n      currentRun: {} as any,\n      data: [] as any[],\n      layout: {\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { l: 50, t: 10, r: 10, b: 0 },\n        yaxis: {\n          autorange: true,\n        },\n        xaxis: {},\n      },\n      loglayout: {\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { l: 50, t: 10, r: 10, b: 0 },\n        yaxis: {\n          type: 'log',\n          autorange: true,\n        },\n      },\n\n      options: {\n        displayModeBar: false,\n        responsive: true,\n      },\n\n      currentSituation: {} as any,\n      loadedSeriesData: {} as any,\n      zipLoader: {} as any,\n\n      labels: {\n        nSusceptible: 'Susceptible',\n        nInfectedButNotContagious: 'Infected, not contagious',\n        nContagious: 'Contagious',\n        nSeriouslySick: 'Seriously Sick',\n        nCritical: 'Critical',\n        nTotalInfected: 'Total Infected',\n        nInfectedCumulative: 'Infected Cumulative',\n        nRecovered: 'Recovered',\n        nInQuarantine: 'In Quarantine',\n      } as any,\n    }\n  },\n\n  mounted() {\n    this.loadZipData()\n  },\n\n  methods: {\n    async loadZipData() {\n      this.zipLoader = new ZipLoader(this.zipFile)\n\n      await this.zipLoader.load()\n\n      console.log('zip loaded!')\n      this.runChanged()\n    },\n\n    async runChanged() {\n      console.log({ run: this.currentRun })\n\n      if (this.loadedSeriesData[this.currentRun.RunId]) {\n        this.data = this.loadedSeriesData[this.currentRun.RunId]\n        return\n      }\n\n      const csv: any[] = await this.loadCSV(this.currentRun)\n      const timeSerieses = this.generateSeriesFromCSVData(csv)\n\n      // cache the result\n      this.loadedSeriesData[this.currentRun.RunId] = timeSerieses\n\n      this.data = timeSerieses\n    },\n\n    sliderChanged(measure: any, value: any) {\n      this.currentSituation[measure] = value\n      this.showPlotForCurrentSituation()\n    },\n\n    showPlotForCurrentSituation() {\n      let lookupKey = ''\n      for (const measure of Object.keys(this.state.measures))\n        lookupKey += this.currentSituation[measure] + '-'\n\n      this.currentRun = this.state.runLookup[lookupKey]\n      if (!this.currentRun) return\n\n      this.runChanged()\n    },\n\n    unpack(rows: any[], key: any) {\n      let v = rows.map(function (row) {\n        if (key === 'day') return row[key]\n        return row[key] * 4\n      })\n\n      v = v.slice(0, 150)\n      return v\n    },\n\n    async loadCSV(currentRun: any) {\n      if (!currentRun.RunId) return []\n\n      const filename = currentRun.RunId + '.infections.txt'\n      console.log('Extracting', filename)\n\n      let text = this.zipLoader.extractAsText(filename)\n      const z = Papa.parse(text, { header: true, dynamicTyping: true })\n\n      return z.data\n    },\n\n    generateSeriesFromCSVData(data: any[]) {\n      const serieses = []\n\n      const x: number[] = this.unpack(data, 'day')\n\n      for (const column of Object.keys(this.labels)) {\n        const name = this.labels[column]\n        const y: number[] = this.unpack(data, column)\n        serieses.push({ x, y, name })\n      }\n\n      return serieses\n    },\n  },\n})\n</script>\n\n<style scoped>\n#main-section {\n  background-color: white;\n  display: flex;\n  flex-direction: row;\n}\n\n.categories {\n  display: flex;\n  flex-direction: column;\n}\n\nh5 {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.plot h5 {\n  color: #667883;\n  text-align: center;\n  margin-top: 5rem;\n}\n\n.pieces {\n  padding: 2rem 0rem;\n  display: grid;\n  width: 100%;\n  grid-gap: 1rem;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto;\n}\n\n.pieces h3 {\n  color: #667883;\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 0.5rem;\n  margin: 1rem 1rem 2rem 0rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n}\n\n.sliders {\n  grid-column: 1 / 2;\n  grid-row: 1 / 3;\n  margin-right: 3rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.linear-plot {\n  text-align: center;\n  height: 30rem;\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  display: flex;\n  flex-direction: column;\n}\n\n.log-plot {\n  margin-top: 2rem;\n  text-align: center;\n  grid-column: 2 / 3;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n}\n\n.plotsize {\n  height: 30rem;\n}\n\np.subhead {\n  margin-top: -0.25rem;\n}\n\n.myslider {\n  width: 100%;\n  margin-left: 0.5rem;\n}\n\n.plot {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  padding: 1rem 0rem;\n}\n\n@media only screen and (max-width: 640px) {\n  #main-section {\n    flex-direction: column;\n    padding: 0 0;\n    margin: 0 0rem;\n  }\n\n  .pieces {\n    padding: 1rem 1rem;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .linear-plot {\n    margin-top: 2rem;\n  }\n  .sliders {\n    width: 15rem;\n  }\n}\n</style>\n","export default \"## v1: Activity reductions at different times\\n\\nExploring the effects of several stay-at-home interventions at different times.\\n\\nThe simulations refer to the **Berlin** region (Berlin city plus some surroundings).\\n\\nThe simulations begin on Day 0, with 40 infected individuals in the population. The outcomes below examine consequences of starting various interventions a number of days after the simulation starts.\\n\\nOne clearly sees that \\\"ending all activities\\\" rather quickly kills the infection dynamics, but that as soon as any other activity category out of \\\"work\\\", \\\"social activities\\\", \\\"all other activities\\\" remains open, the infection dynamics runs without restraint through the population.\\n\\nThe limit of the Berlin intensive care system is at about 1000; in consequence, a number of \\\"critical\\\" (purple line) above 1000 indicates overload of that system.\\n\\nThe **base doubling time is approx. 2.1 days**. It corresponds to the German growth rate end Feb/begin Mar, with neither policy measures nor cultural adaptations.\\n\"","<template lang=\"pug\">\n#app\n  .content\n    .readme(v-html=\"readme\")\n\n  section-viewer.viewer(:state=\"state\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport YAML from 'yaml'\nimport Papa from '@simwrapper/papaparse'\n\nimport SectionViewer from './ChartSelector.vue'\n\nimport md from 'markdown-it'\nconst mdParser = new md()\nimport readme from '@/assets/v1-notes.md?raw'\n\nexport default defineComponent({\n  name: 'V1',\n  components: { SectionViewer },\n  data() {\n    return {\n      state: {\n        measures: {},\n        runLookup: {},\n        publicPath: '/',\n      },\n      readme: mdParser.render(readme, {}),\n    }\n  },\n\n  async mounted() {\n    const parsed = await this.loadIndexData()\n    const matrix = await this.generateScenarioMatrix(parsed)\n  },\n\n  methods: {\n    async loadIndexData() {\n      console.log('fetching data')\n      const response = await fetch('/v1-info.txt')\n      const text = await response.text()\n      const parsed: any = Papa.parse(text, { header: true, dynamicTyping: true })\n      console.log({ parsed: parsed.data })\n\n      return parsed.data\n    },\n\n    async generateScenarioMatrix(parsed: any[]) {\n      console.log('generating lookups')\n      const measures: any = {}\n      const runLookup: any = {}\n\n      // first get column names for the measures that have been tested\n      const ignore = ['Config', 'Output', 'RunId', 'RunScript']\n\n      for (const label of Object.keys(parsed[0])) {\n        if (ignore.indexOf(label) > -1) continue\n        measures[label] = new Set()\n      }\n\n      // get all possible values\n      for (const run of parsed) {\n        if (!run.RunId) continue\n\n        // note this particular value, for every value\n        for (const measure of Object.keys(measures)) {\n          if (run[measure]) measures[measure].add(run[measure])\n        }\n\n        // store the run in a lookup using all values as the key\n        let lookupKey = ''\n        for (const measure of Object.keys(measures)) lookupKey += run[measure] + '-'\n        runLookup[lookupKey] = run\n      }\n\n      for (const measure of Object.keys(measures)) {\n        measures[measure] = Array.from(measures[measure].keys()).sort((a: any, b: any) => a - b)\n      }\n\n      console.log({ measures, runLookup })\n      this.state.measures = measures\n      this.state.runLookup = runLookup\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n#app {\n  color: #222;\n  display: flex;\n  flex-direction: column;\n  margin: 0rem 0rem;\n  padding: 0px 0px;\n  font-family: Roboto, Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.nav-bar {\n  position: fixed;\n  width: 100%;\n  top: 0px;\n  background-color: white;\n  box-shadow: 0px 5px 10px #44444440;\n  padding: 0rem 0rem 0rem 1rem;\n  z-index: 5;\n}\n\n.address-header {\n  margin-top: 4rem;\n  background-color: #d3e1ee;\n  padding: 3rem 10rem;\n}\n\n.address-header h2 {\n  font-size: 2.5rem;\n  font-weight: bold;\n}\n\n.address-header h3 {\n  font-size: 1rem;\n  font-weight: normal;\n  margin-top: -0.5rem;\n}\n\n.content {\n  padding: 0rem 3rem;\n  margin: 2rem 0rem;\n  padding-bottom: 1rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.viewer {\n  padding: 0rem 3rem;\n  margin: 0rem 0rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.footer {\n  text-align: center;\n  padding: 2rem 0.5rem;\n  background-color: #627785;\n}\n\n.footer p {\n  color: white;\n}\n\n.footer a {\n  color: #334;\n}\n\n.footer img {\n  margin: 1rem auto;\n  padding: 0 1rem;\n}\n\n@media only screen and (max-width: 640px) {\n  .content {\n    padding: 0rem 1rem;\n    margin-top: 2rem;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    row-gap: 1rem;\n  }\n\n  .address-header {\n    padding-left: 2rem;\n  }\n}\n</style>\n"],"names":["_sfc_main$2","defineComponent","VueSlideBar","experiments","x","answer","_sfc_main$1","MySlider","VuePlotly","ZipLoader","csv","timeSerieses","measure","value","lookupKey","rows","key","v","row","currentRun","filename","text","Papa","data","serieses","column","name","y","readme","mdParser","md","_sfc_main","SectionViewer","parsed","measures","runLookup","ignore","label","run","a","b"],"mappings":"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"}