{"version":3,"file":"MobilityMap-5lnGIIYx.js","sources":["../../src/components/MobilityPlot.vue","../../src/components/MobilityMap.vue"],"sourcesContent":["<template lang=\"pug\">\nvue-plotly(:data=\"dataLines\" :layout=\"layout\" :options=\"options\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport VuePlotly from '@/components/VuePlotly.vue'\n\nexport default defineComponent({\n  name: 'MobilityPlot',\n  components: { VuePlotly },\n  props: {\n    data: { type: Array as PropType<any[]>, required: true },\n    outOfHomeDurationPlot: { type: Boolean, required: true },\n    yAxisName: { type: String, required: true },\n    plotInterval: { type: Array as PropType<any[]>, required: true },\n    activity: { type: String, required: true },\n    time: { type: String, required: true },\n    loadPage: { type: String, required: true },\n  },\n\n  data() {\n    return {\n      dataLines: [] as any[],\n      layout: {\n        showlegend: true,\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { t: 5, r: 60, b: 0, l: 60 },\n        xaxis: {\n          fixedrange: window.innerWidth < 700,\n          //range: ['2020-03-02', '2021-04-26'],\n          type: 'date',\n        },\n        yaxis: {\n          fixedrange: window.innerWidth < 700,\n          type: 'linear',\n          autorange: true,\n          title: this.yAxisName,\n        },\n        plot_bgcolor: '#f8f8f8',\n        paper_bgcolor: '#f8f8f8',\n      },\n\n      options: {\n        responsive: true,\n        // displayModeBar: true,\n        displaylogo: false,\n        modeBarButtonsToRemove: [\n          'pan2d',\n          'zoom2d',\n          'select2d',\n          'lasso2d',\n          'zoomIn2d',\n          'zoomOut2d',\n          'autoScale2d',\n          'hoverClosestCartesian',\n          'hoverCompareCartesian',\n          'resetScale2d',\n          'toggleSpikelines',\n          'resetViewMapbox',\n        ],\n        toImageButtonOptions: {\n          format: 'svg', // one of png, svg, jpeg, webp\n          filename: 'custom_image',\n          width: 1200,\n          height: 600,\n          scale: 1.0, // Multiply title/legend/axis/canvas sizes by this factor\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.updateMobilityData()\n  },\n\n  watch: {\n    activity() {\n      this.layout.yaxis.title = this.yAxisName\n      this.updateMobilityData()\n    },\n\n    data() {\n      this.updateMobilityData()\n    },\n\n    loadPage() {\n      this.updateMobilityData()\n    },\n  },\n\n  methods: {\n    updateMobilityData() {\n      var mobilityData: any[] = []\n      var kind = this.activity\n\n      if (!this.outOfHomeDurationPlot) {\n        kind = 'percentageChangeComparedToBeforeCorona'\n      }\n\n      for (const [key, value] of Object.entries(this.data)) {\n        var xData: any[] = []\n        var ydata: any[] = []\n        const name = key\n\n        for (const [key2, value2] of Object.entries(value as Object)) {\n          if (key2 == this.time) {\n            xData = Object.keys(value2)\n            xData.forEach(element => {\n              ydata.push(value2[element][kind])\n            })\n          }\n        }\n        if (name == 'Deutschland') {\n          mobilityData.push({\n            name: name,\n            x: xData,\n            y: ydata,\n            fill: 'none',\n            marker: { size: 4 },\n            line: {\n              dash: 'line',\n              width: 2,\n              color: 'black',\n            },\n          })\n        } else {\n          mobilityData.push({\n            name: name,\n            x: xData,\n            y: ydata,\n            fill: 'none',\n            marker: { size: 2 },\n            opacity: '0.5',\n            line: {\n              dash: 'dot',\n              width: 1.5,\n              color: name,\n            },\n          })\n        }\n      }\n      this.dataLines = mobilityData\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n","<template lang=\"pug\">\n\nvue-plotly(:data=\"data\", :layout=\"layout\", :options=\"config\" @click=\"handleClick\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport VuePlotly from '@/components/VuePlotly.vue'\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoidnNwLXR1LWJlcmxpbiIsImEiOiJjamNpemh1bmEzNmF0MndudHI5aGFmeXpoIn0.u9f04rjFo7ZbWiSceTTXyA'\n\nexport default defineComponent({\n  name: 'CollapsiblePanel',\n  components: { VuePlotly },\n  props: {\n    landkreisData: { type: Array as PropType<any[]>, required: true },\n    startDate: { type: String, required: true },\n    endDate: { type: String, required: true },\n    time: { type: String, required: true },\n    activity: { type: String, required: true },\n    mapping: { type: Object },\n  },\n\n  data() {\n    const logColorScale = [\n      [0.0, 'rgb(20,137,73)'],\n      [0.5, 'rgb(243,240,159)'],\n      [1.0, 'rgb(200,32,38)'],\n    ]\n\n    return {\n      jsonData: {},\n      test: '',\n      landkreiseUrl: '/landkreise-in-germany.geojson',\n      bundeslandUrl: '/Bundesländer_2016_ew.json',\n      svnUrl:\n        'https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/episim/original-data/landkreise-in-germany',\n\n      logColorScale,\n\n      data: [\n        {\n          type: 'choroplethmapbox',\n          locations: ['a', 'b'],\n          featureidkey: '',\n          z: [1, 2],\n          geojson: [],\n          text: ['a', 'b'],\n          zmin: -40,\n          zmax: 40,\n          colorscale: logColorScale,\n          hoverinfo: 'z' + 'text',\n          colorbar: {\n            title: { text: 'Percentage change', side: 'right', font: { size: 15 } },\n          },\n        },\n      ],\n\n      layout: {\n        mapbox: {\n          center: { lon: 10.3, lat: 51.3 },\n          zoom: 5.3,\n          style: 'basic',\n        },\n        margin: { t: 5, r: 0, b: 0, l: 0 },\n        paper_bgcolor: 'rgb(236,239,242)',\n        coloraxis: {\n          cauto: false,\n          cmin: -5,\n          cmax: 5,\n        },\n      },\n\n      config: {\n        mapboxAccessToken: MAPBOX_TOKEN,\n        toImageButtonOptions: {\n          format: 'svg', // one of png, svg, jpeg, webp\n          filename: 'germany_mobility',\n          width: 800,\n          height: 900,\n          scale: 1.0, // Multiply title/legend/axis/canvas sizes by this factor\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.loadData(this.svnUrl + this.landkreiseUrl)\n    this.updateMap()\n  },\n\n  watch: {\n    mapping() {\n      this.updateMap()\n    },\n\n    activity() {\n      this.updateMap()\n    },\n\n    startDate() {\n      this.updateMap()\n    },\n\n    endDate() {\n      this.updateMap()\n    },\n\n    time() {\n      this.updateMap()\n    },\n\n    landkreisData() {\n      this.updateMap()\n    },\n  },\n\n  methods: {\n    handleClick(event: any) {\n      try {\n        // according to Plot.ly docs the points[] array should exist:\n        // https://plotly.com/javascript/plotlyjs-events/\n        const location = event.points[0].location\n        console.log('User clicked on:', location)\n\n        // send the event upstream!\n        this.$emit('landkreisClicked', location)\n      } catch (error) {\n        console.error(error)\n      }\n    },\n\n    async loadData(url: string) {\n      const response = await fetch(\n        'https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/episim/original-data/landkreise-in-germany/landkreise-in-germany.geojson'\n      )\n      const jsonData = await response.json()\n\n      this.data[0].geojson = jsonData\n    },\n\n    async loadBundesland(url: string) {\n      const response = await fetch(\n        'https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/episim/original-data/landkreise-in-germany/Bundesländer_2016_ew.json'\n      )\n      const jsonData = await response.json()\n\n      this.data[1].geojson = jsonData\n    },\n\n    updateMap() {\n      if (this.mapping !== undefined) {\n        var locations = []\n        var data = []\n        var names = []\n        for (const [key, value] of Object.entries(this.landkreisData)) {\n          var id\n          id = this.mapping[key]\n          locations.push(id)\n          names.push(key)\n          if (\n            value[this.time][this.endDate] === undefined ||\n            value[this.time][this.startDate] === undefined\n          ) {\n          } else {\n            if (this.startDate == this.endDate) {\n              data.push(value[this.time][this.endDate][this.activity])\n              this.data[0].zmin = 0\n              this.data[0].zmax = 0\n              this.data[0].colorscale = [['ylorbr']]\n              if (this.activity == 'endHomeActs') {\n                this.data[0].colorbar.title.text =\n                  'Per day of out-of-home activity between 10 p.m. and 5 a.m. per 1,000 inhabitants'\n              } else if (this.activity == 'sharePersonLeavingHome') {\n                this.data[0].colorbar.title.text = 'Percent [%]'\n              } else if (this.activity == 'dailyRangePerPerson') {\n                this.data[0].colorbar.title.text = 'Distance per Person [km]'\n              } else if (this.activity == 'outOfHomeDuration') {\n                this.data[0].colorbar.title.text = 'Time per Day [h]'\n              }\n            } else {\n              data.push(\n                value[this.time][this.endDate][this.activity] *\n                  (100 / value[this.time][this.startDate][this.activity]) -\n                  100\n              )\n              this.data[0].colorscale = this.logColorScale\n              this.data[0].zmin = -40\n              this.data[0].zmax = 40\n              this.data[0].colorbar.title.text = 'Percentage change [%]'\n            }\n            this.data[0].locations = locations\n            this.data[0].z = data\n            this.data[0].featureidkey = 'properties.id_2'\n            this.data[0].text = names\n            // force update the data array...\n            // otherwise the map won't update\n            this.data = [...this.data]\n          }\n        }\n      } else {\n        console.log('Mapping not defined')\n      }\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n"],"names":["_sfc_main$1","defineComponent","VuePlotly","mobilityData","kind","key","value","xData","ydata","name","key2","value2","element","MAPBOX_TOKEN","_sfc_main","logColorScale","event","location","error","url","jsonData","locations","data","names","id"],"mappings":"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"}