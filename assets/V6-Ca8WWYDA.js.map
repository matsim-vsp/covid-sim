{"version":3,"file":"V6-Ca8WWYDA.js","sources":["../../src/runs/v6/SelectWidget.vue","../../src/runs/v6/ChartSelector.vue","../../src/assets/v6-notes.md?raw","../../src/runs/v6/V6.vue"],"sourcesContent":["<template lang=\"pug\">\n.zslect-widget\n  vue-slide-bar.my-slider(v-if=\"showSlider\" :speed=\"0\" :data=\"stops\" v-model=\"value\")\n\n  .button-choices(v-if=\"showButtons\")\n    button.button.is-small(\n      v-for=\"choice in stops\"\n      :class=\"{'is-link': choice===value}\"\n      :key=\"choice\"\n      @click='choseButton(choice)') {{ choice }}\n\n  p {{ measureTitle }}\n\n</template>\n\n<script lang=\"ts\">\nimport VueSlideBar from 'vue-slide-bar'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'SelectWidget',\n  components: { VueSlideBar },\n  props: {\n    state: { type: Object, required: true },\n    measure: { type: String, required: true },\n  },\n  data() {\n    return {\n      value: 0 as any,\n      stops: [0, 1000],\n\n      showButtons: false,\n      showSlider: true,\n\n      interventions: {\n        remainingFractionKiga: 'Going to kindergarten',\n        remainingFractionPrimary: 'Going to primary school',\n        remainingFractionSecondary: 'Going to secondary/univ.',\n\n        remainingFractionWork: 'Work activities',\n        remainingFractionLeisure: 'Leisure activities',\n        remainingFractionShoppingErrandsBusiness: 'All other activities',\n      } as any,\n    }\n  },\n\n  mounted() {\n    const experiments = []\n    for (const x of this.state.measures[this.measure]) {\n      let label = x\n      if (x === 0.2) label = '20%'\n      if (x === 0.4) label = '40%'\n      if (x === 0.6) label = '60%'\n      if (x === 0.8) label = '80%'\n\n      if (isNaN(label)) {\n        if (!this.showButtons) this.value = label // select first choice\n        this.showButtons = true\n        this.showSlider = false\n      }\n\n      experiments.push(label)\n    }\n\n    this.stops = experiments.map(x => (x <= 1 ? x * 100 : x))\n    if (this.showSlider) this.value = 'Never'\n  },\n\n  computed: {\n    measureTitle() {\n      return this.interventions[this.measure]\n    },\n  },\n  watch: {\n    value() {\n      let answer = this.value\n      if (answer === 'Never') {\n        answer = 1000\n      } else if (answer === '20%') {\n        answer = 0.2\n      } else if (answer === '40%') {\n        answer = 0.4\n      } else if (answer === '60%') {\n        answer = 0.6\n      } else if (answer === '80%') {\n        answer = 0.8\n      } else if (!isNaN(answer)) {\n        answer = 0.01 * answer\n      }\n      console.log(answer)\n      this.$emit('changed', this.measure, answer)\n    },\n  },\n\n  methods: {\n    choseButton(choice: string) {\n      console.log(choice)\n      this.value = choice\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.my-slider {\n  margin-top: 1rem;\n}\n\n.button-choices {\n  margin-top: 1rem;\n}\n\n.button-choices button {\n  margin-right: 0.5rem;\n}\n\n@media only screen and (max-width: 768px) {\n  .my-slider {\n    margin-top: 0.25rem;\n  }\n}\n</style>\n","<template lang=\"pug\">\n.charts\n  .preamble\n    h3.select-scenario Select Scenario:\n\n    .variation\n      b Variation\n      .variation-choices.buttons.has-addons\n        button.button.is-small(\n          :class=\"{'is-link': plusminus === '-5', 'is-selected': plusminus === '-5'}\"\n          @click=\"setPlusMinus('-5')\") -5\n        button.button.is-small(\n          :class=\"{'is-link': plusminus === '5', 'is-selected': plusminus === '5'}\"\n          @click=\"setPlusMinus('5')\") +5\n\n  #main-section\n    .pieces\n      .sliders\n        .button-choices.buttons.has-addons\n          button.button.is-small(\n            :class=\"{'is-link': !isBase, 'is-selected': !isBase}\"\n            :key=\"'do-something'\" @click='setBase(false)') Alternatives\n          button.button.is-small(\n            :class=\"{'is-link': isBase, 'is-selected': isBase}\"\n            :key=\"'base'\" @click='setBase(true)') What would have happened w/o restrictions\n\n        .selection-widgets(:class=\"{'totally-disabled': isBase}\")\n          .g1\n            h5.title Percentage of out-of-home activities still occuring after March 23\n            p.subhead By type (%)\n\n            .myslider(v-for=\"measure in Object.keys(state.measures).slice(4)\" :key=\"measure\")\n              my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n          .g1\n            h5.title Reopening of educational facilities on April 20\n            p.subhead Students Returning (%):\n\n            .myslider(v-for=\"measure in Object.keys(state.measures).slice(1,4)\" :key=\"measure\")\n              my-slider(:measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n        h5.cumulative Cumulative Infected\n        p.infected {{ prettyInfected }}\n\n      .log-plot\n        h5 {{ cityCap }} Simulated Population Health Outcomes Over Time\n        p Log scale\n        vue-plotly.plotsize(:data=\"data\" :layout=\"loglayout\" :options=\"options\")\n\n      .linear-plot\n        h5 {{ cityCap }} Simulated Population Health Outcomes Over Time\n        p Linear scale\n        vue-plotly.plotsize(:data=\"data\" :layout=\"layout\" :options=\"options\")\n\n</template>\n\n<script lang=\"ts\">\n// ###########################################################################\nimport Papa from '@simwrapper/papaparse'\nimport VuePlotly from '@/components/VuePlotly.vue'\nimport ZipLoader from 'zip-loader'\nimport moment from 'moment'\n\nimport MySlider from './SelectWidget.vue'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ChartSelector',\n  components: { MySlider, VuePlotly },\n  props: {\n    state: { type: Object, required: true },\n    city: { type: String, required: true },\n  },\n  data() {\n    return {\n      MAX_DAYS: 200,\n      plusminus: '-5',\n      isBase: false,\n\n      data: [] as any[],\n\n      layout: {\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { l: 50, t: 10, r: 10, b: 0 },\n        yaxis: {\n          title: 'Population',\n          autorange: true,\n        },\n        xaxis: {\n          range: ['2020-02-16', '2020-08-31'],\n          type: 'date',\n        },\n        plot_bgcolor: '#f8f8f8',\n        paper_bgcolor: '#f8f8f8',\n      },\n\n      loglayout: {\n        autosize: true,\n        showlegend: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { t: 5, r: 10, b: 0, l: 60 },\n        xaxis: {\n          range: ['2020-02-16', '2020-08-31'],\n          type: 'date',\n        },\n        yaxis: {\n          type: 'log',\n          autorange: true,\n          title: 'Population (log scale)',\n        },\n        plot_bgcolor: '#f8f8f8',\n        paper_bgcolor: '#f8f8f8',\n      },\n\n      options: {\n        // displayModeBar: true,\n        displaylogo: false,\n        responsive: true,\n        modeBarButtonsToRemove: [\n          'pan2d',\n          'zoom2d',\n          'select2d',\n          'lasso2d',\n          'zoomIn2d',\n          'zoomOut2d',\n          'autoScale2d',\n          'hoverClosestCartesian',\n          'hoverCompareCartesian',\n          'resetScale2d',\n          'toggleSpikelines',\n          'resetViewMapbox',\n        ],\n        toImageButtonOptions: {\n          format: 'svg', // one of png, svg, jpeg, webp\n          filename: 'custom_image',\n          width: 800,\n          height: 600,\n          scale: 1.0, // Multiply title/legend/axis/canvas sizes by this factor\n        },\n      },\n\n      currentSituation: {} as any,\n      currentRun: {} as any,\n\n      loadedSeriesData: {} as any,\n      zipLoader: {} as any,\n      zipCache: {} as any,\n\n      labels: {\n        nSusceptible: 'Susceptible',\n        nInfectedButNotContagious: 'Infected, not contagious',\n        nContagious: 'Contagious',\n        nShowingSymptoms: 'Showing Symptoms',\n        nSeriouslySick: 'Seriously Sick',\n        nCritical: 'Critical',\n        nTotalInfected: 'Total Infected',\n        nInfectedCumulative: 'Infected Cumulative',\n        nRecovered: 'Recovered',\n        nInQuarantine: 'In Quarantine',\n      } as any,\n\n      fillcolors: {\n        Susceptible: '#0000ff',\n        'Seriously Sick': '#cc2211',\n        'Showing Symptoms': '#00ffff',\n        'Infected Cumulative': '#f791cf',\n        'Infected, not contagious': '#ee8800',\n        Critical: '#882299',\n        Recovered: '#eedd44',\n        Contagious: '#00aa00',\n        'Total Infected': '#a65628',\n      } as any,\n    }\n  },\n\n  mounted() {\n    this.loadZipData()\n  },\n\n  computed: {\n    cityCap() {\n      return this.city.slice(0, 1).toUpperCase() + this.city.slice(1)\n    },\n\n    prettyInfected() {\n      if (!this.state.cumulativeInfected) return ''\n\n      const rounded = 100 * Math.round(this.state.cumulativeInfected * 0.01)\n      return Number(rounded).toLocaleString()\n    },\n  },\n\n  watch: {\n    city() {\n      this.loadedSeriesData = {}\n      this.loadZipData()\n    },\n\n    plusminus() {\n      console.log('now we are', this.plusminus)\n      this.showPlotForCurrentSituation()\n    },\n  },\n\n  methods: {\n    setBase(value: boolean) {\n      this.isBase = value\n      this.showPlotForCurrentSituation()\n    },\n\n    setPlusMinus(value: string) {\n      this.plusminus = value\n    },\n\n    async loadZipData() {\n      // check cache first!\n      if (this.zipCache[this.city]) {\n        console.log('using cached zip for!', this.city)\n        this.zipLoader = this.zipCache[this.city]\n      } else {\n        // load the zip from file\n        const filepath = this.state.publicPath + 'v6-data-' + this.city + '.zip'\n        this.zipLoader = new ZipLoader(filepath)\n        await this.zipLoader.load()\n      }\n\n      console.log('zip loaded!')\n      this.zipCache[this.city] = this.zipLoader\n      this.runChanged()\n    },\n\n    testErrors() {\n      const blow: any = [\n        {\n          x: [1, 2, 3],\n          y: [1, 1.1, 1.2],\n          name: 'low',\n        },\n      ]\n\n      const z = blow[0].x.length\n\n      console.log({ z })\n\n      const high = [\n        {\n          x: [1, 2, 3, 4],\n          y: [3, 4, 5, 6],\n          name: 'high',\n        },\n      ]\n\n      blow[0].x.push(55)\n      console.log({ z })\n\n      const answer = this.generateErrorBars(blow, high)\n      console.log({ answer })\n    },\n\n    generateErrorBars(low: any[], high: any[]): any[] {\n      console.log({ low, high })\n\n      for (let metric = 0; metric < low.length; metric++) {\n        const lowLen = low[metric].x.length\n        const highLen = high[metric].x.length\n\n        console.log({ lowLen, highLen })\n\n        let newX: any[] = []\n        newX = newX.concat(low[metric]['x'])\n        // if (highLen > lowLen) newX.push(high[metric]['x'][highLen - 1])\n        // if (highLen < lowLen) newX.push(low[metric]['x'][lowLen - 1])\n\n        newX = newX.concat(high[metric]['x'].slice().reverse()) // slice copies, then reverse reverses in-place.\n\n        let newY: any[] = []\n        newY = newY.concat(low[metric]['y'])\n        // if (highLen > lowLen) newY.push(low[metric]['y'][lowLen - 1])\n        // if (highLen < lowLen) newY.push(high[metric]['y'][highLen - 1])\n\n        newY = newY.concat(high[metric]['y'].slice().reverse()) // slice copies, then reverse reverses in-place.\n\n        low[metric].x = newX\n        low[metric].y = newY\n\n        const color = this.fillcolors[low[metric]['name']]\n        // scatterplot fakes a look like error bands\n        low[metric].fillcolor = color + '20'\n        low[metric].showlegend = true\n        low[metric].line = { color: color }\n        low[metric].fill = 'tozerox'\n        low[metric].type = 'scatter'\n      }\n\n      console.log({ errorBar: low })\n      return low\n    },\n\n    async runChanged() {\n      // maybe we already did the calcs\n      if (this.loadedSeriesData[this.currentRun.RunId]) {\n        this.data = this.loadedSeriesData[this.currentRun.RunId]\n        this.updateTotalInfected()\n        return\n      }\n\n      // load both datasets\n      const csvLow: any[] = await this.loadCSV(this.currentRun)\n      const timeSeriesesLow = this.generateSeriesFromCSVData(csvLow)\n\n      // const errorBars = this.generateErrorBars(timeSeriesesLow, timeSeriesesHigh)\n\n      // cache the result\n      this.loadedSeriesData[this.currentRun.RunId] = timeSeriesesLow\n\n      this.data = timeSeriesesLow\n      this.updateTotalInfected()\n    },\n\n    updateTotalInfected() {\n      const infectedCumulative = this.data.filter(a => a.name === 'Infected Cumulative')[0]\n      this.state.cumulativeInfected = Math.max(...infectedCumulative.y)\n    },\n\n    sliderChanged(measure: any, value: any) {\n      console.log(measure, value)\n      this.currentSituation[measure] = value\n      this.showPlotForCurrentSituation()\n    },\n\n    showPlotForCurrentSituation() {\n      if (this.isBase) {\n        this.currentRun = { RunId: 'sz0' }\n        this.runChanged()\n        return\n      }\n\n      let lookupKey = ''\n      for (const measure of Object.keys(this.state.measures))\n        lookupKey += this.currentSituation[measure] + '-'\n\n      const suffix = this.plusminus === '5' ? '5' : '-5'\n      const lookup = lookupKey.replace('undefined', suffix)\n      // const lookupLow = lookupKey.replace('undefined', '-5')\n      // const lookupHigh = lookupKey.replace('undefined', '5')\n\n      console.log(lookup) // , lookupLow, lookupHigh)\n\n      this.currentRun = this.state.runLookup[lookup]\n      // this.currentRunHigh = this.state.runLookup[lookupHigh]\n\n      if (!this.currentRun) return\n\n      this.runChanged()\n    },\n\n    unpack(rows: any[], key: any) {\n      let v = rows.map(function (row) {\n        if (key === 'day') return row[key]\n        return row[key]\n      })\n\n      v = v.slice(0, this.MAX_DAYS)\n\n      // maybe the sim ended early - go out to 150 anyway\n      if (v.length < this.MAX_DAYS) {\n        v.push(key === 'day' ? this.MAX_DAYS : v[v.length - 1])\n      }\n      return v\n    },\n\n    async loadCSV(currentRun: any) {\n      if (!currentRun.RunId) return []\n\n      const filename = currentRun.RunId + '.infections.txt'\n      console.log('Extracting', filename)\n\n      let text = this.zipLoader.extractAsText(filename)\n      const z = Papa.parse(text, { header: true, dynamicTyping: true, skipEmptyLines: true })\n\n      return z.data\n    },\n\n    calculateDatefromSimulationDay(day: number) {\n      const startDay = this.plusminus === '-5' ? '2020-02-22' : '2020-02-12'\n      const date = moment(startDay).add(day, 'days').format('YYYY-MM-DD')\n      return date\n    },\n\n    generateSeriesFromCSVData(data: any[]) {\n      const serieses = []\n\n      const days: number[] = this.unpack(data, 'day')\n      console.log({ days })\n      const x = days.map(d => this.calculateDatefromSimulationDay(d))\n\n      console.log({ x })\n\n      for (const column of Object.keys(this.labels)) {\n        const name = this.labels[column]\n\n        if (name === 'In Quarantine') continue\n\n        const y: number[] = this.unpack(data, column)\n        serieses.push({ x, y, name })\n      }\n\n      // Add Berlin \"Reported Cases\"\n      if (this.city === 'berlin') serieses.push(this.state.berlinCases)\n\n      return serieses\n    },\n  },\n})\n\n// ###########################################################################\n</script>\n\n<style scoped>\n#main-section {\n  display: flex;\n  flex-direction: row;\n}\n\nh5 {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.pieces {\n  padding: 0rem 0rem;\n  display: grid;\n  width: 100%;\n  grid-gap: 0rem;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto;\n}\n\n.pieces h3 {\n  color: #667883;\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 0.5rem;\n  margin: 1rem 1rem 2rem 0rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n}\n\n.sliders {\n  grid-column: 1 / 2;\n  grid-row: 1 / 4;\n  margin-right: 1rem;\n  width: 17rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.log-plot {\n  background-color: #f8f8f8;\n  padding: 0.5rem 0.75rem 0.5rem 0.5rem;\n  margin: 0 0 1rem 1rem;\n  text-align: center;\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ccc;\n}\n\n.linear-plot {\n  background-color: #f8f8f8;\n  padding: 0.5rem 0.75rem 0.5rem 0.5rem;\n  margin: 1rem 0 1rem 1rem;\n  text-align: center;\n  grid-column: 2 / 3;\n  grid-row: 3 / 4;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ccc;\n}\n\nh5 {\n  margin-top: 0.5rem;\n}\n\n.plotsize {\n  height: 30rem;\n}\n\np.subhead {\n  margin-top: -0.25rem;\n}\n\n.myslider {\n  width: 100%;\n  margin-left: 0.5rem;\n}\n\n.plot {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  padding: 1rem 0rem;\n}\n\n.infected {\n  padding-left: 0rem;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-top: -1rem;\n  margin-left: 1rem;\n  color: rgb(151, 71, 34);\n}\n\n.button-choices {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 0.25rem;\n}\n\n.button-choices button {\n  width: 100%;\n}\n\n.title {\n  line-height: 1.4rem;\n  margin: 1rem 0 0.5rem 0;\n}\n\n.totally-disabled {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.g1 {\n  padding: 0rem 1rem 1rem 0.5rem;\n  margin-bottom: 2rem;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n}\n\n.cumulative {\n  margin-top: 1rem;\n  margin-left: 1rem;\n}\n\n.preamble {\n  display: flex;\n  flex-direction: row;\n  margin-top: 2rem;\n}\n\n.variation {\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-bottom: 0.3rem;\n  text-align: center;\n}\n\n.variation-choices {\n  padding: 0 0;\n}\n\n@media only screen and (max-width: 640px) {\n  #main-section {\n    flex-direction: column;\n    padding: 0 0;\n    margin: 0 0rem;\n  }\n\n  p.infected {\n    margin-bottom: 1rem;\n  }\n\n  .pieces {\n    padding: 1rem 0rem;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .log-plot {\n    margin-left: 0;\n  }\n\n  .linear-plot {\n    margin-top: 2rem;\n    margin-left: 0;\n  }\n  .sliders {\n    width: 15rem;\n  }\n}\n</style>\n","export default \"## v6: School Reopening Scenarios (3)\\n\\nHere we depict the effects of reopening society at various levels for work, school, leisure and other activities.\\n\\n- The simulations refer to either the **Berlin** or **Munich** regions (each city plus some surroundings).\\n- Berlin real-world infections are from [Robert Koch Institute (RKI)](https://npgeo-corona-npgeo-de.hub.arcgis.com/datasets/dd4580c810204019a7b8eb3e0b329dd6_0). For many cases, a delay between infection and reporting may occur.\\n- After **March 13**, 10% of leisure acts are banned (corresponding to the closure of theaters, etc.). Also, schools / kindergarten / universities are closed. 10 percent of kita and primary-aged children still go to kita / primary schools (Notbetrieb).\\n- On **March 23**, work, shopping, errands and business are reduced, corresponding to the currently valid \\\"Kontaktsperre\\\"; the percentage of work, leisure, shopping, errands and business activities still occuring after **March 23** can be set.\\n- Educational facilities can be reopened on **April 20**.\\n\\n{{PLOTS}}\\n\\n[Google COVID-19 Mobility report](https://google.com/covid19/mobility) shows for Berlin after March 23:\\n\\n- retail & recreation down by about 70% (i.e. at about **30%**)\\n- grocery & pharmacy down by about 20% (i.e. at about **80%**)\\n- parks down by about 20% (i.e. at about **80%**)\\n- workplace down by about 40% (i.e. at about **60%**)\\n  Other than google, we do not take the last day, but take visual averages over about a week.\\n\\nThe best approximation to this with our options below would be:\\n\\n- **leisure** at **20%** (with the assumption that parks do not contribute that much to infections)\\n- **work** at **60%**\\n- **shopping** at **40%**\\n- **errands & business** at **40%**\\n\\nIf one assumes that the capacity of the Berlin system for critical COVID cases is about 1000, then one finds that there is scant little room to relax restrictions.\\n\\nOr alternatively: The currently \\\"blunt\\\" restrictions would need to be replaced by something smarter.\\n\"","<template lang=\"pug\">\n#app\n  .city-picker\n    router-link.which-city(v-for=\"zcity in cities\"\n      :key=\"zcity\" :class=\"{'selected': zcity.toLowerCase()===city.toLowerCase()}\"\n      :to=\"'/v6/' + zcity.toLowerCase()\")\n      h1 {{ zcity }}\n\n  .content\n    .readme(v-html=\"topNotes\")\n\n    .view-section\n      section-viewer.viewer(:state=\"state\" :city=\"city\")\n\n    .bottom(v-if=\"bottomNotes\")\n      h3 Further Notes\n      .readme(v-html=\"bottomNotes\")\n\n</template>\n\n<script lang=\"ts\">\n// ###########################################################################\nimport Papa from '@simwrapper/papaparse'\n\nimport SectionViewer from '@/runs/v6/ChartSelector.vue'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport Markdown from 'markdown-it'\nimport v6Notes from '@/assets/v6-notes.md?raw'\nimport berlinCSV from '@/assets/berlin-cases.csv?raw'\n\nconst html = new Markdown({\n  html: true,\n  linkify: true,\n  typographer: true,\n}).render(v6Notes)\n\nexport default defineComponent({\n  name: 'V6',\n  components: { SectionViewer },\n  props: {},\n\n  data() {\n    return {\n      state: {\n        measures: {},\n        runLookup: {},\n        cumulativeInfected: 0,\n        berlinCases: {} as any,\n        publicPath: '/',\n      },\n      readme: {\n        berlin: html,\n        munich: html,\n      } as any,\n      plotTag: '{{PLOTS}}',\n      city: '',\n      plusminus: '-5',\n    }\n  },\n\n  async mounted() {\n    console.log({ route: this.$route })\n    this.city = this.$route.params.city\n\n    await this.loadDataInBackground()\n  },\n\n  computed: {\n    cities() {\n      return ['Berlin', 'Munich']\n    },\n\n    topNotes() {\n      const notes = this.readme[this.city]\n      if (!notes) return ''\n\n      const i = notes.indexOf(this.plotTag)\n\n      if (i < 0) return notes\n      return notes.substring(0, i)\n    },\n\n    bottomNotes() {\n      const notes = this.readme[this.city]\n      if (!notes) return ''\n\n      const i = notes.indexOf(this.plotTag)\n\n      if (i < 0) return ''\n      return notes.substring(i + this.plotTag.length)\n    },\n  },\n\n  watch: {\n    async $route(to: any, from: any) {\n      console.log(to)\n      await this.loadDataInBackground()\n      this.city = to.params.city\n    },\n  },\n\n  methods: {\n    async loadDataInBackground() {\n      this.state.berlinCases = this.prepareBerlinData()\n\n      const filepath = this.state.publicPath + 'v6-info-' + this.city + '.txt'\n      const parsed = await this.loadCSVData(filepath)\n      const matrix = await this.generateScenarioMatrix(parsed)\n    },\n\n    prepareBerlinData() {\n      // Our simulation start date is 2020.02.16 based on school closures 13.March\n      // Two cases in RKI data before 2020.02.16 (as of 2020.04.16)\n      // Thus we begin Berlin data with 2 cases.\n      const data = Papa.parse(berlinCSV, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n      }).data\n\n      console.log({ data })\n\n      const dates: any = []\n      const cases: any = []\n      let cumulative = 0\n\n      console.log('fetched berlin data:', data.length)\n\n      // pull the cases field out of the CSV\n      for (const datapoint of data) {\n        const day = datapoint.year + '-' + datapoint.month + '-' + datapoint.day\n        dates.push(day)\n\n        cumulative += datapoint.cases\n        cases.push(cumulative)\n      }\n\n      const series = {\n        name: 'Berlin Infections (RKI)',\n        x: dates,\n        y: cases,\n        line: {\n          dash: 'dot',\n          width: 3,\n          color: 'rgb(0,200,150)',\n        },\n      }\n\n      console.log({ berlinSeries: series })\n      return series\n    },\n\n    async loadCSVData(filepath: string) {\n      console.log('fetching data')\n      const response = await fetch(filepath)\n      const text = await response.text()\n      const parsed: any = Papa.parse(text, { header: true, dynamicTyping: true })\n      console.log({ parsed: parsed.data })\n\n      return parsed.data\n    },\n\n    async generateScenarioMatrix(parsed: any[]) {\n      console.log('generating lookups')\n      const measures: any = {}\n      const runLookup: any = {}\n\n      // first get column names for the measures that have been tested\n      const ignore = ['Config', 'Output', 'RunId', 'RunScript']\n\n      for (const label of Object.keys(parsed[0])) {\n        if (ignore.indexOf(label) > -1) continue\n        measures[label] = new Set()\n      }\n\n      // get all possible values\n      for (const run of parsed) {\n        if (!run.RunId) continue\n\n        // note this particular value, for every value\n        for (const measure of Object.keys(measures)) {\n          if (run[measure] === 0 || run[measure]) measures[measure].add(run[measure])\n        }\n\n        // store the run in a lookup using all values as the key\n        let lookupKey = ''\n        for (const measure of Object.keys(measures)) lookupKey += run[measure] + '-'\n        runLookup[lookupKey] = run\n      }\n\n      for (const measure of Object.keys(measures)) {\n        measures[measure] = Array.from(measures[measure].keys()).sort((a: any, b: any) => a - b)\n      }\n\n      console.log({ measures, runLookup })\n      this.state.measures = measures\n      this.state.runLookup = runLookup\n    },\n  },\n})\n\n// ###########################################################################\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n.content {\n  padding: 0rem 3rem;\n  margin: 2rem 0 4rem 0;\n  max-width: 70em;\n  display: flex;\n  flex-direction: column;\n}\n\n.content h3.select-scenario {\n  margin-bottom: 0;\n}\n\n.view-section {\n  width: 100%;\n}\n\n.viewer {\n  padding: 0rem 0rem;\n  margin: 0rem 0rem;\n  max-width: 70em;\n  display: flex;\n  flex-direction: column;\n}\n\n.city-picker {\n  display: flex;\n  background-color: $bannerHighlight;\n  padding: 0.3rem 3rem 0 3rem;\n}\n\n.which-city {\n  padding: 0rem 2rem 0.2rem 2rem;\n  margin-top: 0.1rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  text-transform: capitalize;\n}\n\na.which-city {\n  color: #bbb;\n}\n\n.selected {\n  padding-top: 0.1rem;\n  background-color: $paleBackground;\n}\n\na.selected {\n  color: black;\n}\n\n.bottom {\n  margin-top: 2rem;\n}\n\n@media only screen and (max-width: 640px) {\n  .content {\n    padding: 1rem 1rem;\n    margin-top: 1rem;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    row-gap: 1rem;\n  }\n\n  .which-city {\n    padding: 0.5rem 1rem;\n  }\n}\n</style>\n"],"names":["_sfc_main$2","defineComponent","VueSlideBar","experiments","x","label","answer","choice","_sfc_main$1","MySlider","VuePlotly","rounded","value","filepath","ZipLoader","blow","z","high","low","metric","lowLen","highLen","newX","newY","color","csvLow","timeSeriesesLow","infectedCumulative","a","measure","lookupKey","suffix","lookup","rows","key","v","row","currentRun","filename","text","Papa","day","startDay","moment","data","serieses","days","d","column","name","y","v6Notes","html","Markdown","_sfc_main","SectionViewer","notes","i","to","from","parsed","berlinCSV","dates","cases","cumulative","datapoint","series","measures","runLookup","ignore","run","b"],"mappings":"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"}