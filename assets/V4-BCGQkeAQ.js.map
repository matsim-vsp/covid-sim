{"version":3,"file":"V4-BCGQkeAQ.js","sources":["../../src/runs/v4/SelectWidget.vue","../../src/runs/v4/ChartSelector.vue","../../src/assets/v4-notes.md?raw","../../src/runs/v4/V4.vue"],"sourcesContent":["<template lang=\"pug\">\n#slider-thing\n  vue-slide-bar.my-slider(v-if=\"showSlider\" :speed=\"0\" :data=\"stops\" v-model=\"value\")\n\n  .button-choices(v-if=\"showButtons\")\n    button.button.is-small(\n      v-for=\"choice in stops\"\n      :class=\"{'is-link': choice===value}\"\n      :key=\"choice\"\n      @click='choseButton(choice)') {{ choice }}\n\n  p {{ measureTitle }}\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport VueSlideBar from 'vue-slide-bar'\n\nexport default defineComponent({\n  name: 'SelectWidget',\n  components: {\n    VueSlideBar,\n  },\n  props: {\n    state: { type: Object, required: true },\n    measure: { type: String, required: true },\n  },\n  data() {\n    return {\n      value: 0 as any,\n      stops: [0, 1000],\n      showButtons: false,\n      showSlider: true,\n      interventions: {\n        remainingFractionKiga: 'Going to kindergarten',\n        remainingFractionPrimary: 'Going to primary school',\n        remainingFractionSecondary: 'Going to secondary school',\n        remainingFractionHigher: 'Going to univ./higher ed.',\n        ShutdownType: 'Shutdown type',\n      } as any,\n    }\n  },\n\n  mounted() {\n    const experiments = []\n    for (const x of this.state.measures[this.measure]) {\n      let label = x\n      if (x === 'weak') label = 'Type A'\n      if (x === 'strong') label = 'Type B'\n\n      if (isNaN(label)) {\n        if (!this.showButtons) this.value = label // select first choice\n        this.showButtons = true\n        this.showSlider = false\n      }\n\n      experiments.push(label)\n    }\n\n    this.stops = experiments.map(x => (x <= 1 ? x * 100 : x))\n    if (this.showSlider) this.value = 'Never'\n  },\n\n  computed: {\n    measureTitle() {\n      return this.interventions[this.measure]\n    },\n  },\n  watch: {\n    value() {\n      let answer = this.value\n      if (answer === 'Never') {\n        answer = 1000\n      } else if (answer === 'Type A') {\n        answer = 'weak'\n      } else if (answer === 'Type B') {\n        answer = 'strong'\n      } else if (!isNaN(answer)) {\n        answer = 0.01 * answer\n      }\n      this.$emit('changed', this.measure, answer)\n    },\n  },\n\n  methods: {\n    choseButton(choice: string) {\n      console.log(choice)\n      this.value = choice\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.my-slider {\n  margin-top: 1rem;\n}\n\n.button-choices {\n  margin-top: 1rem;\n}\n\n.button-choices button {\n  margin-right: 0.5rem;\n}\n\n@media only screen and (max-width: 768px) {\n  .my-slider {\n    margin-top: 0.25rem;\n  }\n}\n</style>\n","<template lang=\"pug\">\n.main-section\n  .pieces\n    .sliders\n\n      h5 Shutdown Type\n      .myslider(v-for=\"measure in Object.keys(state.measures)\" :key=\"'x'+ measure\")\n        my-slider.gap(v-if=\"measure === 'ShutdownType'\" :measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n      br\n\n      h5 School Attendance\n      p.subhead Percent Still Attending:\n      .myslider(v-for=\"measure in Object.keys(state.measures)\" :key=\"measure\")\n        my-slider(v-if=\"measure != 'ShutdownType'\" :measure=\"measure\" :state=\"state\" @changed=\"sliderChanged\")\n\n      h5.cumulative Cumulative Infected\n        br\n        | by Day 150\n      p.infected {{ prettyInfected }}\n\n    .linear-plot\n      h5 Simulated Population Health Outcomes Over Time\n      p Linear scale\n      vue-plotly.plotsize(:data=\"data\" :layout=\"layout\" :options=\"options\")\n\n    .log-plot\n      h5 Simulated Population Health Outcomes Over Time\n      p Log scale\n      vue-plotly.plotsize(:data=\"data\" :layout=\"loglayout\" :options=\"options\")\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport Papa from '@simwrapper/papaparse'\nimport VuePlotly from '@/components/VuePlotly.vue'\nimport ZipLoader from 'zip-loader'\n\nimport MySlider from './SelectWidget.vue'\n\nexport default defineComponent({\n  name: 'ChartSelector',\n  components: { MySlider, VuePlotly },\n  props: {\n    state: { type: Object, required: true },\n  },\n  data() {\n    return {\n      currentRun: {} as any,\n      data: [] as any[],\n      layout: {\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { l: 50, t: 10, r: 10, b: 0 },\n        yaxis: {\n          autorange: true,\n        },\n        xaxis: {},\n      },\n\n      loglayout: {\n        autosize: true,\n        legend: {\n          orientation: 'h',\n        },\n        font: {\n          family: 'Roboto,Arial,Helvetica,sans-serif',\n          size: 12,\n          color: '#000',\n        },\n        margin: { l: 50, t: 10, r: 10, b: 0 },\n        yaxis: {\n          type: 'log',\n          autorange: true,\n        },\n      },\n      options: {\n        displayModeBar: false,\n        responsive: true,\n      },\n\n      currentSituation: {} as any,\n      loadedSeriesData: {} as any,\n      zipLoader: {} as any,\n\n      labels: {\n        nSusceptible: 'Susceptible',\n        nInfectedButNotContagious: 'Infected, not contagious',\n        nContagious: 'Contagious',\n        nSeriouslySick: 'Seriously Sick',\n        nCritical: 'Critical',\n        nTotalInfected: 'Total Infected',\n        nInfectedCumulative: 'Infected Cumulative',\n        nRecovered: 'Recovered',\n        nInQuarantine: 'In Quarantine',\n      } as any,\n    }\n  },\n\n  mounted() {\n    this.loadZipData()\n  },\n\n  computed: {\n    prettyInfected() {\n      if (!this.state.cumulativeInfected) return ''\n\n      const rounded = 100 * Math.round(this.state.cumulativeInfected * 0.01)\n      return Number(rounded).toLocaleString()\n    },\n  },\n\n  methods: {\n    async loadZipData() {\n      this.zipLoader = new ZipLoader(this.state.publicPath + 'v4-data.zip')\n\n      await this.zipLoader.load()\n\n      console.log('zip loaded!')\n      this.runChanged()\n    },\n\n    async runChanged() {\n      console.log({ run: this.currentRun })\n\n      if (this.loadedSeriesData[this.currentRun.RunId]) {\n        this.data = this.loadedSeriesData[this.currentRun.RunId]\n        this.updateTotalInfected()\n        return\n      }\n\n      const csv: any[] = await this.loadCSV(this.currentRun)\n      const timeSerieses = this.generateSeriesFromCSVData(csv)\n\n      // cache the result\n      this.loadedSeriesData[this.currentRun.RunId] = timeSerieses\n\n      this.data = timeSerieses\n      this.updateTotalInfected()\n    },\n\n    updateTotalInfected() {\n      const infectedCumulative = this.data.filter(a => a.name === 'Infected Cumulative')[0]\n      this.state.cumulativeInfected = infectedCumulative.y[149]\n    },\n\n    sliderChanged(measure: any, value: any) {\n      console.log(measure, value)\n      this.currentSituation[measure] = value\n      this.showPlotForCurrentSituation()\n    },\n\n    showPlotForCurrentSituation() {\n      let lookupKey = ''\n      for (const measure of Object.keys(this.state.measures))\n        lookupKey += this.currentSituation[measure] + '-'\n\n      console.log(lookupKey)\n      this.currentRun = this.state.runLookup[lookupKey]\n      if (!this.currentRun) return\n\n      this.runChanged()\n    },\n\n    unpack(rows: any[], key: any) {\n      let v = rows.map(function (row) {\n        if (key === 'day') return row[key]\n        return row[key] // * 4\n      })\n\n      v = v.slice(0, 150)\n\n      // maybe the sim ended early - go out to 150 anyway\n      if (v.length < 150) {\n        v.push(key === 'day' ? 150 : v[v.length - 1])\n      }\n\n      return v\n    },\n\n    async loadCSV(currentRun: any) {\n      if (!currentRun.RunId) return []\n\n      const filename = currentRun.RunId + '.infections.txt'\n      console.log('Extracting', filename)\n\n      let text = this.zipLoader.extractAsText(filename)\n      const z = Papa.parse(text, { header: true, dynamicTyping: true, skipEmptyLines: true })\n\n      return z.data\n    },\n\n    generateSeriesFromCSVData(data: any[]) {\n      const serieses = []\n\n      const x: number[] = this.unpack(data, 'day')\n\n      for (const column of Object.keys(this.labels)) {\n        const name = this.labels[column]\n        const y: number[] = this.unpack(data, column)\n        serieses.push({ x, y, name })\n      }\n\n      return serieses\n    },\n  },\n})\n</script>\n\n<style scoped>\n.main-section {\n  background-color: white;\n  display: flex;\n  flex-direction: row;\n}\n\nh5 {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.pieces {\n  padding: 2rem 0rem;\n  display: grid;\n  width: 100%;\n  grid-gap: 1rem;\n  grid-template-columns: 15rem 1fr;\n  grid-template-rows: auto;\n}\n\n.pieces h3 {\n  color: #667883;\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 0.5rem;\n  margin: 1rem 1rem 2rem 0rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n}\n\n.sliders {\n  grid-column: 1 / 2;\n  grid-row: 1 / 3;\n  margin-right: 3rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.linear-plot {\n  text-align: center;\n  height: 30rem;\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  display: flex;\n  flex-direction: column;\n}\n\n.log-plot {\n  margin-top: 2rem;\n  text-align: center;\n  grid-column: 2 / 3;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n}\n\n.plotsize {\n  height: 30rem;\n}\n\np.subhead {\n  margin-top: -0.25rem;\n}\n\n.myslider {\n  width: 100%;\n  margin-left: 0.5rem;\n}\n\n.plot {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  padding: 1rem 0rem;\n}\n\n.infected {\n  padding-left: 0rem;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-top: -0.5rem;\n  color: rgb(151, 71, 34);\n}\n\n.button-choices button {\n  margin-right: 0.5rem;\n}\n\n.cumulative {\n  margin-top: 2rem;\n}\n\n.gap {\n  margin-bottom: 2rem;\n}\n\n@media only screen and (max-width: 640px) {\n  #main-section {\n    flex-direction: column;\n    padding: 0 0;\n    margin: 0 0rem;\n  }\n\n  .pieces {\n    padding: 1rem 1rem;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .linear-plot {\n    margin-top: 2rem;\n  }\n  .sliders {\n    width: 15rem;\n  }\n}\n</style>\n","export default \"## v4: School Reopening Scenarios (1)\\n\\nV4 attempts to replay the development so far, and explores results of various school attendance scenarios and two levels of restrictions on non-school activity:\\n\\n- The simulations refer to the **Berlin** region (Berlin city plus some surroundings).\\n- The **base doubling time is approx. 3 days**. It corresponds to the German growth rate 2nd & 3rd week of Mar, i.e. with slight cultural adaptations but not policy interventions.\\n- On **day 26**, 10% of leisure acts are banned (corresponding to the closure of theaters, etc.) Also, schools / kindergarten / universities are closed. 10 percent of kita and primary-aged children still go to kita / primary schools (Notbetrieb)\\n- On **day 35**, work, shopping, errands and business are restricted, corresponding to the currently valid \\\"Kontaktsperre\\\":\\n  - **Type A**: Work and shopping 60% reduced; leisure, business and errands 80% reduced\\n  - **Type B**: Work and shopping 80% reduced; leisure, business and errands 90% reduced\\n- On **day 63**, educational facilities can be reopened (estimated to be the 20th of April).\\n\\nSome results:\\n- The **doubling time of the intervention of \\\"Type A\\\" is approx. 13 days**, which is _more optimistic_ than what we currently measure (approx. 9 days).\\n- \\\"Type B\\\" is even more optimistic.\\n\\nWhat has changed compring to v2?\\n\\n- Inclusion of school population\\n\"","<template lang=\"pug\">\n.app\n  .content\n    .readme(v-html=\"readme\")\n\n  section-viewer.viewer(:state=\"state\")\n\n</template>\n\n<script lang=\"ts\">\nimport Papa from '@simwrapper/papaparse'\nimport SectionViewer from '@/runs/v4/ChartSelector.vue'\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport Markdown from 'markdown-it'\nimport readme from '@/assets/v4-notes.md?raw'\nconst readmeHTML = new Markdown({\n  html: true,\n  linkify: true,\n  typographer: true,\n}).render(readme)\n\nexport default defineComponent({\n  name: 'V4',\n  components: { SectionViewer },\n  props: {},\n  data() {\n    return {\n      state: {\n        measures: {},\n        runLookup: {},\n        cumulativeInfected: 0,\n        publicPath: '/',\n      },\n      readme: readmeHTML,\n    }\n  },\n\n  async mounted() {\n    const parsed = await this.loadIndexData()\n    await this.generateScenarioMatrix(parsed)\n  },\n\n  computed: {},\n  watch: {},\n\n  methods: {\n    async loadIndexData() {\n      console.log('fetching data')\n      const response = await fetch(this.state.publicPath + 'v4-info.txt')\n      const text = await response.text()\n      const parsed: any = Papa.parse(text, { header: true, dynamicTyping: true })\n      console.log({ parsed: parsed.data })\n\n      return parsed.data\n    },\n\n    async generateScenarioMatrix(parsed: any[]) {\n      console.log('generating lookups')\n      const measures: any = {}\n      const runLookup: any = {}\n\n      // first get column names for the measures that have been tested\n      const ignore = ['Config', 'Output', 'RunId', 'RunScript']\n\n      for (const label of Object.keys(parsed[0])) {\n        if (ignore.indexOf(label) > -1) continue\n        measures[label] = new Set()\n      }\n\n      // get all possible values\n      for (const run of parsed) {\n        if (!run.RunId) continue\n\n        // note this particular value, for every value\n        for (const measure of Object.keys(measures)) {\n          if (run[measure] === 0 || run[measure]) measures[measure].add(run[measure])\n        }\n\n        // store the run in a lookup using all values as the key\n        let lookupKey = ''\n        for (const measure of Object.keys(measures)) lookupKey += run[measure] + '-'\n        runLookup[lookupKey] = run\n      }\n\n      for (const measure of Object.keys(measures)) {\n        measures[measure] = Array.from(measures[measure].keys()).sort((a: any, b: any) => a - b)\n      }\n\n      console.log({ measures, runLookup })\n      this.state.measures = measures\n      this.state.runLookup = runLookup\n    },\n  },\n})\n</script>\n\n<style scoped>\n.address-header {\n  margin-top: 4rem;\n  background-color: #d3e1ee;\n  padding: 3rem 10rem;\n}\n\n.address-header h2 {\n  font-size: 2.5rem;\n  font-weight: bold;\n}\n\n.address-header h3 {\n  font-size: 1rem;\n  font-weight: normal;\n  margin-top: -0.5rem;\n}\n\n.content {\n  padding: 0rem 3rem;\n  margin: 2rem 0rem;\n  padding-bottom: 1rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.viewer {\n  padding: 0rem 2rem;\n  margin: 0rem 0rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\nh2 {\n  padding-top: 1rem;\n}\n\n@media only screen and (max-width: 768px) {\n  .content {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    padding: 0rem 1rem;\n    margin: 2rem 0rem;\n    row-gap: 1rem;\n  }\n\n  .address-header {\n    padding-left: 2rem;\n  }\n}\n</style>\n"],"names":["_sfc_main$2","defineComponent","VueSlideBar","experiments","x","label","answer","choice","_sfc_main$1","MySlider","VuePlotly","rounded","ZipLoader","csv","timeSerieses","infectedCumulative","a","measure","value","lookupKey","rows","key","v","row","currentRun","filename","text","Papa","data","serieses","column","name","y","readme","readmeHTML","Markdown","_sfc_main","SectionViewer","parsed","measures","runLookup","ignore","run","b"],"mappings":"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"}