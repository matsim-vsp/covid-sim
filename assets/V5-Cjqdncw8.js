import{P as r}from"./papaparse.min-CI2QfVdR.js";import{V as u}from"./VuePlotly-cQHnW0jz.js";import{Z as d}from"./zip-loader.module-BRLILkva.js";import{V as h}from"./vue-slide-bar.min-DFANp2IR.js";import{d as l,n as c,M as p}from"./index-bM8PJih8.js";import{b as m}from"./berlin-cases-BQxiAdRu.js";const f=l({name:"SelectWidget",components:{VueSlideBar:h},props:{state:{type:Object,required:!0},measure:{type:String,required:!0}},data(){return{value:0,stops:[0,1e3],showButtons:!1,showSlider:!0,interventions:{remainingFractionKiga:"Going to kindergarten",remainingFractionPrimary:"Going to primary school",remainingFractionSecondary:"Going to secondary school",remainingFractionHigher:"Going to univ./higher ed.",remainingFractionWork:"Work activities",remainingFractionShopping:"Shopping activities",remainingFractionLeisure:"Leisure activities",remainingFractionErrandsBusiness:"Errands & Business"}}},mounted(){const s=[];for(const e of this.state.measures[this.measure]){let t=e;e===.2&&(t="20%"),e===.4&&(t="40%"),e===.6&&(t="60%"),e===.8&&(t="80%"),isNaN(t)&&(this.showButtons||(this.value=t),this.showButtons=!0,this.showSlider=!1),s.push(t)}this.stops=s.map(e=>e<=1?e*100:e),this.showSlider&&(this.value="Never")},computed:{measureTitle(){return this.interventions[this.measure]}},watch:{value(){let s=this.value;s==="Never"?s=1e3:s==="20%"?s=.2:s==="40%"?s=.4:s==="60%"?s=.6:s==="80%"?s=.8:isNaN(s)||(s=.01*s),console.log(s),this.$emit("changed",this.measure,s)}},methods:{choseButton(s){console.log(s),this.value=s}}});var g=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{attrs:{id:"slider-thing"}},[e.showSlider?t("vue-slide-bar",{staticClass:"my-slider",attrs:{speed:0,data:e.stops},model:{value:e.value,callback:function(a){e.value=a},expression:"value"}}):e._e(),e.showButtons?t("div",{staticClass:"button-choices"},e._l(e.stops,function(a){return t("button",{key:a,staticClass:"button is-small",class:{"is-link":a===e.value},on:{click:function(n){return e.choseButton(a)}}},[e._v(e._s(a))])}),0):e._e(),t("p",[e._v(e._s(e.measureTitle))])],1)},v=[],y=c(f,g,v,!1,null,"5ce2da93");const b=y.exports,C=l({name:"ChartSelector",components:{MySlider:b,VuePlotly:u},props:{state:{type:Object,required:!0}},data(){return{currentRun:{},isBase:!1,data:[],currentSituation:{},loadedSeriesData:{},zipLoader:{},labels:{nSusceptible:"Susceptible",nInfectedButNotContagious:"Infected, not contagious",nContagious:"Contagious",nSeriouslySick:"Seriously Sick",nCritical:"Critical",nTotalInfected:"Total Infected",nInfectedCumulative:"Infected Cumulative",nRecovered:"Recovered",nInQuarantine:"In Quarantine"},layout:{autosize:!0,legend:{orientation:"h"},font:{family:"Roboto,Arial,Helvetica,sans-serif",size:12,color:"#000"},margin:{l:50,t:10,r:10,b:0},yaxis:{autorange:!0},xaxis:{}},loglayout:{autosize:!0,legend:{orientation:"h"},font:{family:"Roboto,Arial,Helvetica,sans-serif",size:12,color:"#000"},margin:{l:50,t:10,r:10,b:0},yaxis:{type:"log",autorange:!0}},options:{displayModeBar:!1,responsive:!0}}},mounted(){this.loadZipData()},computed:{prettyInfected(){if(!this.state.cumulativeInfected)return"";const s=100*Math.round(this.state.cumulativeInfected*.01);return Number(s).toLocaleString()}},watch:{},methods:{setBase(s){this.isBase=s,this.showPlotForCurrentSituation()},async loadZipData(){this.zipLoader=new d(this.state.publicPath+"v5-data.zip"),await this.zipLoader.load(),console.log("zip loaded!"),this.runChanged()},async runChanged(){if(this.loadedSeriesData[this.currentRun.RunId]){this.data=this.loadedSeriesData[this.currentRun.RunId],this.updateTotalInfected();return}const s=await this.loadCSV(this.currentRun),e=this.generateSeriesFromCSVData(s);this.loadedSeriesData[this.currentRun.RunId]=e,this.data=e,this.updateTotalInfected()},updateTotalInfected(){const s=this.data.filter(e=>e.name==="Infected Cumulative")[0];this.state.cumulativeInfected=s.y[s.y.length-1]},sliderChanged(s,e){console.log(s,e),this.currentSituation[s]=e,this.showPlotForCurrentSituation()},showPlotForCurrentSituation(){if(this.isBase){this.currentRun={RunId:"sz0"},this.runChanged();return}let s="";for(const e of Object.keys(this.state.measures))s+=this.currentSituation[e]+"-";console.log(s),this.currentRun=this.state.runLookup[s],this.currentRun&&this.runChanged()},unpack(s,e){let t=s.map(function(a){return a[e]});return t=t.slice(0,150),t.length<150&&t.push(e==="day"?150:t[t.length-1]),t},async loadCSV(s){if(!s.RunId)return[];const e=s.RunId+".infections.txt";console.log("Extracting",e);let t=this.zipLoader.extractAsText(e);return r.parse(t,{header:!0,dynamicTyping:!0,skipEmptyLines:!0}).data},generateSeriesFromCSVData(s){const e=[],t=this.unpack(s,"day");for(const a of Object.keys(this.labels)){const n=this.labels[a];if(n==="In Quarantine")continue;const i=this.unpack(s,a);e.push({x:t,y:i,name:n})}return e.push(this.state.berlinCases),e}}});var _=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"main-section"},[t("div",{staticClass:"pieces"},[t("div",{staticClass:"sliders"},[t("h5",[e._v("Select Scenario")]),t("div",{staticClass:"button-choices buttons has-addons"},[t("button",{key:"do-something",staticClass:"button is-small",class:{"is-link":!e.isBase,"is-selected":!e.isBase},on:{click:function(a){return e.setBase(!1)}}},[e._v("Alternatives")]),t("button",{key:"base",staticClass:"button is-small",class:{"is-link":e.isBase,"is-selected":e.isBase},on:{click:function(a){return e.setBase(!0)}}},[e._v("What would have happened w/o restrictions")])]),t("div",{staticClass:"selection-widgets",class:{"totally-disabled":e.isBase}},[t("div",{staticClass:"g1"},[t("h5",{staticClass:"title"},[e._v("Percentage of out-of-home activities still occuring after day 35")]),t("p",{staticClass:"subhead"},[e._v("By type (%)")]),e._l(Object.keys(e.state.measures).slice(4),function(a){return t("div",{key:a,staticClass:"myslider"},[t("my-slider",{attrs:{measure:a,state:e.state},on:{changed:e.sliderChanged}})],1)})],2),t("div",{staticClass:"g1"},[t("h5",{staticClass:"title"},[e._v("Reopening of educational facilities at day 63")]),t("p",{staticClass:"subhead"},[e._v("Students Returning (%):")]),e._l(Object.keys(e.state.measures).slice(0,4),function(a){return t("div",{key:a,staticClass:"myslider"},[t("my-slider",{attrs:{measure:a,state:e.state},on:{changed:e.sliderChanged}})],1)})],2)]),t("h5",{staticClass:"cumulative"},[e._v("Cumulative Infected")]),t("p",{staticClass:"infected"},[e._v(e._s(e.prettyInfected))])]),t("div",{staticClass:"linear-plot"},[t("h5",[e._v("Simulated Population Health Outcomes Over Time")]),t("p",[e._v("Linear scale")]),t("vue-plotly",{staticClass:"plotsize",attrs:{data:e.data,layout:e.layout,options:e.options}})],1),t("div",{staticClass:"log-plot"},[t("h5",[e._v("Simulated Population Health Outcomes Over Time")]),t("p",[e._v("Log scale")]),t("vue-plotly",{staticClass:"plotsize",attrs:{data:e.data,layout:e.loglayout,options:e.options}})],1)])])},w=[],k=c(C,_,w,!1,null,"85574a39");const S=k.exports,B=`## v5: School Reopening Options (2)

Here we describe the effects of reopening society at various levels for work, school, leisure and other activities.

- The simulations refer to the **Berlin** region (Berlin city plus some surroundings).
- Berlin Reported Cases are from [RKI](https://npgeo-corona-npgeo-de.hub.arcgis.com/datasets/dd4580c810204019a7b8eb3e0b329dd6_0). For many cases, a delay between infection and reporting may occur.
- On **day 26** (ca. sat/14/mar), 10% of leisure acts are banned (corresponding to the closure of theaters, etc.). Also, schools / kindergarten / universities are closed. 10 percent of kita and primary-aged children still go to kita / primary schools (Notbetrieb).
- On **day 35** (ca. mon/23/mar), work, shopping, errands and business are reduced, corresponding to the currently valid "Kontaktsperre"; the percentage of work, leisure, shopping, errands and business activities still occuring after **day 35** can be set.
- Educational facilities can be reopened on **day 63** (ca. mon/20/apr).

[Google COVID-19 Mobility report](https://google.com/covid19/mobility) shows for Berlin after day 35:

- retail & recreation down by about 70% (i.e. at about **30%**)
- grocery & pharmacy down by about 20% (i.e. at about **80%**)
- parks down by about 20% (i.e. at about **80%**)
- workplace down by about 40% (i.e. at about **60%**)
  Other than google, we do not take the last day, but take visual averages over about a week.

The best approximation to this with our options below would be:

- **leisure** at **20%** (with the assumption that parks do not contribute that much to infections)
- **work** at **60%**
- **shopping** at **40%**
- **errands & business** at **40%**

If one assumes that the capacity of the Berlin system for critical COVID cases is about 1000, then one finds that there is scant little room to relax restrictions.

Or alternatively: The currently "blunt" restrictions would need to be replaced by something smarter.

This version was used in part to brief the BMBF on Apr/9 about school re-opening options.

What has changed comparing to v4?

- destination (school) choice of school population
- include school attendees in the whole model area (not only inside Berlin city)
`,I=new p({html:!0,linkify:!0,typographer:!0}).render(B),R=l({name:"V5",components:{SectionViewer:S},props:{},data(){return{state:{measures:{},runLookup:{},cumulativeInfected:0,berlinCases:{},publicPath:"/"},readme:I}},async mounted(){await this.loadDataInBackground()},computed:{},watch:{},methods:{async loadDataInBackground(){this.state.berlinCases=this.prepareBerlinData();const s=await this.loadCSVData(this.state.publicPath+"v5-info.txt");await this.generateScenarioMatrix(s)},prepareBerlinData(){const s=r.parse(m,{header:!0,dynamicTyping:!0}).data,e=14,t=new Array(e).fill(0);let a=0;for(let i=0;i<s.length;i++)a+=s[i].cases,t.push(a);const n={name:"Berlin Reported (Cumul.)",x:[...Array(t.length).keys()].slice(1),y:t,line:{dash:"dot",width:3,color:"rgb(0,200,150)"}};return console.log({berlinSeries:n}),n},async loadCSVData(s){console.log("fetching data");const t=await(await fetch(s)).text(),a=r.parse(t,{header:!0,dynamicTyping:!0});return console.log({parsed:a.data}),a.data},async generateScenarioMatrix(s){console.log("generating lookups");const e={},t={},a=["Config","Output","RunId","RunScript"];for(const n of Object.keys(s[0]))a.indexOf(n)>-1||(e[n]=new Set);for(const n of s){if(!n.RunId)continue;for(const o of Object.keys(e))(n[o]===0||n[o])&&e[o].add(n[o]);let i="";for(const o of Object.keys(e))i+=n[o]+"-";t[i]=n}for(const n of Object.keys(e))e[n]=Array.from(e[n].keys()).sort((i,o)=>i-o);console.log({measures:e,runLookup:t}),this.state.measures=e,this.state.runLookup=t}}});var x=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"blapp"},[t("div",{staticClass:"content"},[t("div",{staticClass:"readme",domProps:{innerHTML:e._s(e.readme)}})]),t("section-viewer",{staticClass:"viewer",attrs:{state:e.state}})],1)},O=[],T=c(R,x,O,!1,null,"31f03c60");const $=T.exports;export{$ as default};
//# sourceMappingURL=V5-Cjqdncw8.js.map
