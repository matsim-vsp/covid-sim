{"version":3,"file":"RCalculatorNew-gZpI6Mjd.js","sources":["../../src/views/RCalculatorNew.vue"],"sourcesContent":["<template lang=\"pug\">\n.rcn\n  .banner\n    h2 VSP / Technische UniversitÃ¤t Berlin\n    h3 COVID-19 Analysis Portal\n\n  .page-area\n    colophon.colophon\n\n    .r-calculator(v-if=\"yaml.optionGroups\")\n      h2 {{ $t('r-value-calculator') }}\n      h3(:style=\"{marginBottom: '1rem', color: '#596'}\") {{ this.calcId}}\n\n      h3.badpage(v-if=\"badPage\") {{ $t('badpage') }}\n\n      .goodpage(v-else)\n        p(v-if=\"yaml.description\" v-html=\"topDescription\")\n\n        .columns\n          .column\n            h3: b {{ $t('base-r-value')}}:&nbsp;&nbsp;\n            h3.greenbig {{ selectedBaseR.toFixed(2) }}\n\n            .base-buttons(v-if=\"yaml.baseValues && yaml.baseValues.length > 1\")\n              button.button.is-small(\n                v-for=\"base in yaml.baseValues\"\n                :class=\"{active: selectedBaseR == Object.values(base)[0], 'is-link': selectedBaseR == Object.values(base)[0] }\"\n                @click=\"handleNewBaseValue(Object.values(base)[0])\"\n              ) {{ Object.keys(base)[0] }}\n\n            h3: b {{ $t('calculated-r-value')}}:\n            h3.greenbig(:style=\"{fontSize: '2.5rem', fontWeight: 'bold', color: '#596'}\") {{ (1.0*adjustedR).toFixed(2) }}\n\n          .column.stretch\n            .option-groups\n              //- additive factors\n              .option-group(v-for=\"measure in additiveGroups\" :key=\"`add+${measure}`\")\n                h4 {{ measure }}\n                  span(:style=\"{fontWeight: 'normal'}\"\n                      v-if=\"additions[measure] != 0\") &nbsp; : {{additions[measure]>0 ? '+' : ''}}{{ additions[measure].toFixed(3) }}\n\n                b-slider.slider(\n                      v-model=\"selectedOptionLabels[measure]\"\n                      :min=\"0\" :max=\"labels[measure].length-1\"\n                      :tooltip=\"false\"\n                      size=\"is-large\"\n                      @input=\"handleAdditiveButton(measure)\"\n                )\n                      b-slider-tick(v-for=\"tick,i in labels[measure]\" :key=\"i\" :value=\"i\")\n\n                p.slider-label {{ labels[measure][selectedOptionLabels[measure]] }}\n\n              //- multiplicative factors\n              .option-group(v-for=\"measure in optionGroups\" :key=\"measure\")\n                h4 {{ measure }}\n                  span(:style=\"{fontWeight: 'normal'}\" v-if=\"factors[measure] != 1\") &nbsp; : {{ factors[measure].toFixed(2) }}x\n\n\n                b-slider.slider(\n                      v-model=\"selectedOptionLabels[measure]\"\n                      :min=\"0\" :max=\"labels[measure].length-1\"\n                      :tooltip=\"false\"\n                      size=\"is-large\"\n                      @input=\"handleButton(measure)\"\n                )\n                      b-slider-tick(v-for=\"tick,i in labels[measure]\" :key=\"i\" :value=\"i\")\n\n                p.slider-label {{ labels[measure][selectedOptionLabels[measure]] }}\n\n        br\n\n        h3(v-if=\"yaml.notes\"): b {{ $t('remarks') }}:\n\n        ul(v-if=\"yaml.notes\")\n          li.notes-item(v-for=\"line in yaml.notes\" v-html=\"parseMarkdown(line)\")\n\n\n        h3: b {{ $t('older-calculators') }}:\n\n        ul(v-if=\"oldCalculators\")\n          li.notes-item(v-for=\"calc in oldCalculators\")\n            router-link(:to=\"calc.url\") {{ calc.title }}, {{ calc.date }}\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      'r-value-calculator': 'R-Value Calculator',\n      badpage: 'That page not found, sorry!',\n      'base-r-value': 'Base R Value',\n      'calculated-r-value': 'Calculated R Value',\n      remarks: 'Remarks',\n      'older-calculators': 'All Calculators',\n    },\n    de: {\n      'r-value-calculator': 'R-Wert-Rechner',\n      badpage: 'Seite wurde nicht gefunden.',\n      'base-r-value': 'Basis R-Wert',\n      'calculated-r-value': 'Resultierender R-Wert',\n      remarks: 'Bemerkungen',\n      'older-calculators': 'Alle Rechner',\n    },\n  },\n}\n\nimport YAML from 'yaml'\nimport MarkdownIt from 'markdown-it'\n\nimport Colophon from '@/components/Colophon.vue'\n\nimport allCalculators from '@/assets/calculators'\nimport { PUBLIC_SVN } from '@/Globals'\n\ntype RCalcYaml = {\n  description?: string\n  baseValue?: number\n  baseValues?: { [date: string]: number }[]\n  optionGroups: { [group: string]: [string, any, string?][] }\n  additiveGroups: { [group: string]: [string, any, string?][] }\n  notes: string[]\n}\n\nconst markdownParser = new MarkdownIt({\n  html: true,\n  linkify: true,\n  typographer: true,\n})\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'RCalculatorNew',\n  i18n,\n  components: { Colophon },\n  props: {},\n\n  data() {\n    return {\n      calcId: '',\n\n      yaml: { baseValue: 0, optionGroups: {}, additiveGroups: {}, notes: [] } as RCalcYaml,\n\n      adjustedR: 2.5,\n      selectedBaseR: 2.5,\n      finalR: 2.5,\n\n      badPage: false,\n\n      oldCalculators: allCalculators,\n\n      sliders: {} as { [measure: string]: { title: string; value: number; description: string } },\n      labels: {} as { [measure: string]: string[] },\n      selectedOptionLabels: {} as { [measure: string]: number },\n\n      factors: {} as { [measure: string]: number },\n      additions: {} as { [measure: string]: number },\n\n      lookup: {} as { [measure: string]: { title: string; value: number; description: string }[] },\n    }\n  },\n\n  async mounted() {\n    this.buildPageForURL()\n  },\n\n  computed: {\n    topDescription() {\n      if (!this.yaml.description) return ''\n      return markdownParser.render(this.yaml.description)\n    },\n    optionGroups() {\n      return Object.keys(this.yaml.optionGroups)\n    },\n    additiveGroups() {\n      return Object.keys(this.yaml.additiveGroups)\n    },\n  },\n  watch: {\n    $route() {\n      this.buildPageForURL()\n    },\n  },\n\n  methods: {\n    parseMarkdown(text: string) {\n      return markdownParser.render(text)\n    },\n\n    handleNewBaseValue(base: number) {\n      this.selectedBaseR = base\n      this.updateR()\n    },\n\n    async buildPageForURL() {\n      this.badPage = false\n\n      this.calcId = this.$route.params.rcalc\n\n      const lang = this.$i18n.locale //  === 'de' ? '.de' : ''\n      const url = PUBLIC_SVN + `r-calculator/${this.calcId}.${lang}.yaml`\n\n      let responseText = ''\n\n      try {\n        const response = await fetch(url)\n        responseText = await response.text()\n      } catch (e) {\n        console.error(e)\n      }\n\n      // maybe .de. doesn't exist, fallback .en.:\n      if (!responseText && url.indexOf('.de.') > -1) {\n        console.warn('no', url, 'falling back to .en.')\n        const en_url = url.replace('.de.', '.en.')\n        console.log(en_url)\n        try {\n          const response = await fetch(en_url)\n          responseText = await response.text()\n        } catch (e) {\n          console.error(e)\n        }\n      }\n\n      if (!responseText) {\n        this.badPage = true\n        return\n      }\n\n      this.yaml = YAML.parse(responseText)\n\n      // some old yamls might not have any additive groups\n      if (!this.yaml.additiveGroups) this.yaml.additiveGroups = {}\n\n      this.buildUI()\n      this.updateR()\n    },\n\n    async handleButton(measure: string) {\n      const i = this.selectedOptionLabels[measure]\n      const selection = this.lookup[measure][i]\n\n      this.sliders[measure] = selection\n      this.factors[measure] = selection.value\n      this.updateR()\n      this.$forceUpdate()\n    },\n\n    async handleAdditiveButton(measure: string) {\n      const i = this.selectedOptionLabels[measure]\n      const selection = this.lookup[measure][i]\n\n      this.sliders[measure] = selection\n      this.additions[measure] = selection.value\n      this.updateR()\n      this.$forceUpdate()\n    },\n\n    updateR() {\n      let r = 3.0\n      if (this.yaml.baseValue) r = this.yaml.baseValue\n      else if (this.yaml.baseValues) r = this.selectedBaseR\n\n      // additive factors\n      for (const addition of Object.values(this.additions)) r += addition\n\n      // multiplicative factors\n      for (const factor of Object.values(this.factors)) r *= factor\n\n      // fancy!\n      this.finalR = r\n      this.animateTowardNewRValue()\n    },\n\n    animateTowardNewRValue() {\n      const diff = this.finalR - this.adjustedR\n      const step = this.adjustedR + diff * 0.2\n      this.adjustedR = step\n\n      if (Math.abs(this.adjustedR - this.finalR) < 0.01) {\n        this.adjustedR = this.finalR\n      } else {\n        setTimeout(this.animateTowardNewRValue, 16)\n      }\n    },\n\n    buildUI() {\n      if (this.yaml.baseValues) {\n        this.selectedBaseR = Object.values(this.yaml.baseValues[0])[0]\n      }\n\n      // multiplicative factors\n      for (const group of Object.keys(this.yaml.optionGroups)) {\n        const measures = this.yaml.optionGroups[group]\n        this.lookup[group] = []\n\n        for (const measure of measures) {\n          const title = measure[0]\n          const value = measure[1]\n          const description = measure.length < 3 ? title : '' + measure[2]\n\n          if (!isNaN(value)) {\n            this.lookup[group].push({ title, value, description })\n\n            // first?\n            if (this.yaml.optionGroups[group] === undefined) {\n              this.factors[group] = value\n              this.sliders[group] = this.lookup[group][0]\n            }\n          } else {\n            // user specified a default with an asterisk* after the number\n            const trimAsterisk = parseFloat(value.substring(0, value.length - 1))\n            const choice = { title, value: trimAsterisk, description }\n            this.lookup[group].push(choice)\n            this.sliders[group] = choice\n            this.factors[group] = trimAsterisk\n          }\n        }\n        this.labels[group] = this.lookup[group].map(g => g.title)\n      }\n\n      // additive factors\n      for (const group of Object.keys(this.yaml.additiveGroups)) {\n        const measures = this.yaml.additiveGroups[group]\n        this.lookup[group] = []\n\n        for (const measure of measures) {\n          const title = measure[0]\n          const value = measure[1]\n          const description = measure.length < 3 ? title : '' + measure[2]\n\n          if (!isNaN(value)) {\n            this.lookup[group].push({ title, value, description })\n\n            // first?\n            if (this.yaml.additiveGroups[group] === undefined) {\n              this.additions[group] = value\n              this.sliders[group] = this.lookup[group][0]\n              this.selectedOptionLabels[group] = this.sliders[group].value\n            }\n          } else {\n            // user specified a default with an asterisk* after the number\n            const trimAsterisk = parseFloat(value.substring(0, value.length - 1))\n            const choice = { title, value: trimAsterisk, description }\n            this.lookup[group].push(choice)\n            this.sliders[group] = choice\n            this.additions[group] = trimAsterisk\n            this.selectedOptionLabels[group] = this.sliders[group].value\n          }\n        }\n        this.labels[group] = this.lookup[group].map(g => g.title)\n      }\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@use '@/styles.scss' as *;\n\n.rcn {\n  background-color: $paleBackground;\n}\n\n.page-area {\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.colophon {\n  padding: 2rem 2rem 1rem 5rem;\n  text-align: right;\n  font-size: 0.85rem;\n  background-color: white;\n}\n\n.r-calculator {\n  max-width: 70rem;\n  margin: 0 auto;\n  padding: 2rem 3rem 5rem 3rem;\n}\n\n.option-groups {\n  display: flex;\n  flex-direction: column;\n  // grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n}\n\n.option-group {\n  display: flex;\n  flex-direction: column;\n  border: solid 1px #bbf;\n  border-radius: 4px;\n  background-color: #fafafa;\n  padding: 0.5rem 2rem;\n  margin-bottom: 0rem;\n\n  h4 {\n    margin-left: -1.2rem;\n  }\n}\n\n.measures {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\nh2 {\n  font-size: 2rem;\n}\n\nh3 {\n  font-weight: normal;\n  font-size: 1.3rem;\n  margin-bottom: -0.5rem;\n}\n\nh4 {\n  color: #596;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin: 0 0 0 0;\n  padding: 0 0;\n}\n\n.button {\n  padding: 0 0.5rem;\n  margin: 0 0.15rem 0.15rem 0;\n}\n\np {\n  margin-bottom: 1rem;\n}\n\np.factor {\n  margin: auto 0 auto 1rem;\n  color: #ccc;\n}\n\n.banner {\n  display: flex;\n  flex-direction: column;\n  padding: 4rem 3rem 1rem 3rem;\n  background-color: #1e1f2c;\n  color: white;\n  background: url(../assets/images/banner.jpg);\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.banner h2 {\n  margin-bottom: 0rem;\n  font-size: 1.6rem;\n  background-color: #1e1f2c;\n  line-height: 1.6rem;\n  margin-right: auto;\n}\n\n.banner h3 {\n  font-size: 1.3rem;\n  font-weight: normal;\n  margin-bottom: 0;\n  line-height: 1.4rem;\n  padding-bottom: 0.25rem;\n  background-color: #1e1f2c;\n  width: max-content;\n}\n\n.base-buttons {\n  margin-bottom: 1rem;\n}\n\n.greenbig {\n  color: #596;\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.notes-item {\n  list-style-type: square;\n  margin-left: 1rem;\n  margin-top: 0.5rem;\n  color: #222;\n}\n\nli.notes-item {\n  line-height: 1.3rem;\n}\n\n.slider {\n  padding: 0.5rem;\n  margin: 0 0;\n}\n\n.slider-label {\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  font-weight: bold;\n  color: #383ab1;\n  margin: 1.5rem 0 0 -1.35rem;\n}\n\n.columns {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: row;\n}\n\n.column {\n  min-width: fit-content;\n  flex: 0;\n}\n\n.stretch {\n  margin-left: 1rem;\n  min-width: unset;\n  flex: 1;\n}\n\nul {\n  margin-bottom: 1rem;\n}\n\n@media only screen and (max-width: 950px) {\n  .colophon {\n    display: none;\n  }\n\n  .option-groups {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n\n@media only screen and (max-width: 640px) {\n  .columns {\n    flex-direction: column;\n  }\n\n  .banner {\n    padding: 2rem 1rem;\n  }\n\n  .r-calculator {\n    padding: 2rem 1rem;\n  }\n\n  .option-groups {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n</style>\n"],"names":["i18n","markdownParser","MarkdownIt","_sfc_main","defineComponent","Colophon","allCalculators","text","base","lang","url","PUBLIC_SVN","responseText","e","en_url","YAML","measure","i","selection","r","addition","factor","diff","step","group","measures","title","value","description","trimAsterisk","choice","g"],"mappings":"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"}